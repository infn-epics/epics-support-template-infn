record(longout, "$(P)AcTrigDivider-SP") {
  field(DESC, "EVG AC Divider")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):AcTrig, PROP=Divider")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)AcTrigDivider-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)AcTrigDivider-RB") {
  field(DESC, "EVG AC Divider")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG):AcTrig, PROP=Divider")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
}

record(ao, "$(P)AcTrigPhase-SP") {
  field(DESC, "EVG AC Phase Shifter")
  field(DTYP, "Obj Prop double")
  field(OUT,  "@OBJ=$(EVG):AcTrig, PROP=Phase")
  field(PINI, "YES")
  field(VAL,  "0.0")
  field(UDF,  "0")
  field(HIHI, "25.6")
  field(LOLO, "-0.1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(EGU,  "msec")
  field(HOPR, "25.5")
  field(LOPR, "0")
  field(DRVH, "25.5")
  field(DRVL, "0")
  field(PREC, "1")
  field(FLNK, "$(P)AcTrigPhase-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)AcTrigPhase-RB") {
  field(DESC, "EVG AC Phase Shifter")
  field(DTYP, "Obj Prop double")
  field(INP,  "@OBJ=$(EVG):AcTrig, PROP=Phase")
  field(HIHI, "25.6")
  field(LOLO, "-0.1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(EGU,  "msec")
  field(PREC, "1")
}

record(bo, "$(P)AcTrigBypass-Sel") {
  field(DESC, "Bypass AC divider and Phase shifter")
  field(DTYP, "Obj Prop bool")
  field(OUT,  "@OBJ=$(EVG):AcTrig, PROP=Bypass")
  field(PINI, "YES")
  field(VAL , "1")
  field(UDF,  "0")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)AcTrigBypass-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)AcTrigBypass-RB") {
  field(DESC, "Bypass AC divider and Phase shifter")
  field(DTYP, "Obj Prop bool")
  field(INP,  "@OBJ=$(EVG):AcTrig, PROP=Bypass")
  field(ZNAM, "Off")
  field(ONAM, "On")
}

record(mbbo, "$(P)AcTrigSyncSrc-Sel") {
  field(DESC, "Synchronization Source")
  field(DTYP, "Obj Prop uint16")
  field(OUT,  "@OBJ=$(EVG):AcTrig, PROP=SyncSrc")
  field(PINI, "YES")
  field(ZRST, "Event Clk")
  field(ONST, "Mxc7")
  field(TWST, "FP IN1")
  field(THST, "FP IN2")
  field(ZRVL, "0x00")
  field(ONVL, "0x01")
  field(TWVL, "0x05")
  field(THVL, "0x09")
  field(VAL , "0")
  field(UDF,  "0")
  field(FLNK, "$(P)AcTrigSyncSrc-RB")
  info(autosaveFields_pass0, "VAL")
}


record(mbbi, "$(P)AcTrigSyncSrc-RB") {
  field(DESC, "Synchronization Source")
  field(DTYP, "Obj Prop uint16")
  field(INP,  "@OBJ=$(EVG):AcTrig, PROP=SyncSrc")
  field(ZRST, "Event Clk")
  field(ONST, "Mxc7")
  field(TWST, "FP IN1")
  field(THST, "FP IN2")
  field(ZRVL, "0x00")
  field(ONVL, "0x01")
  field(TWVL, "0x05")
  field(THVL, "0x09")
}

record(mbbo, "$(P)Dbus0Src-Sel") {
  field(DESC, "EVG DBUS Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(ZRST, "Off")
  field(ONST, "Front0")
  field(TWST, "Front1")
  field(THST, "Univ0")
  field(FRST, "Univ1")
  field(FVST, "Univ2")
  field(SXST, "Univ3")
  field(SVST, "Univ4")
  field(EIST, "Univ5")
  field(NIST, "Univ6")
  field(TEST, "Univ7")
  field(ELST, "Univ8")
  field(TVST, "Univ9")
  field(TTST, "Univ10")
  field(FTST, "Mxc 0")
  field(FFST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus0MapConv-Sel_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus0MapConv-Sel_") {
  field(ASG, "private")
  field(DTYP, "Raw Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1")
  field(THVL, "1")
  field(FRVL, "1")
  field(FVVL, "1")
  field(SXVL, "1")
  field(SVVL, "1")
  field(EIVL, "1")
  field(NIVL, "1")
  field(TEVL, "1")
  field(ELVL, "1")
  field(TVVL, "1")
  field(TTVL, "1")
  field(FTVL, "2")
  field(FFVL, "3")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus0Map-Sel PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus0Map-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):Dbus0, PROP=Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "ExtInp")
  field(TWST, "Mxc0")
  field(THST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)Dbus0Src-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)Dbus0Src-Sel.RVAL CP")
}

record(bo, "$(P)Dbus0SrcFrontInp0-Sel") {
  field(DESC, "Front Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)Dbus0SrcFrontInp1-Sel") {
  field(DESC, "Front Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)Dbus0SrcUnivInp0-Sel") {
  field(DESC, "Front Univ Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)Dbus0SrcUnivInp1-Sel") {
  field(DESC, "Front Univ Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)Dbus0SrcUnivInp2-Sel") {
  field(DESC, "Front Univ Input2 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)Dbus0SrcUnivInp3-Sel") {
  field(DESC, "Front Univ Input3 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B5 CP")
}

record(bo, "$(P)Dbus0SrcUnivInp4-Sel") {
  field(DESC, "Front Univ Input4 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B6 CP")
}

record(bo, "$(P)Dbus0SrcUnivInp5-Sel") {
  field(DESC, "Front Univ Input5 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B7 CP")
}

record(bo, "$(P)Dbus0SrcUnivInp6-Sel") {
  field(DESC, "Front Univ Input6 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B8 CP")
}

record(bo, "$(P)Dbus0SrcUnivInp7-Sel") {
  field(DESC, "Front Univ Input7 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.B9 CP")
}

record(bo, "$(P)Dbus0SrcUnivInp8-Sel") {
  field(DESC, "Front Univ Input8 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.BA CP")
}

record(bo, "$(P)Dbus0SrcUnivInp9-Sel") {
  field(DESC, "Front Univ Input9 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.BB CP")
}

record(bo, "$(P)Dbus0SrcUnivInp10-Sel") {
  field(DESC, "Front Univ Input10 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S0 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus0Src-MbbiDir_.BC CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)Dbus0Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus0Omsl0-FOut_ PP")
  field(OUTB, "$(P)Dbus0Omsl1-FOut_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)Dbus0Omsl0-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus0SrcFrontInp0-Sel.OMSL")
  field(OUTB, "$(P)Dbus0SrcFrontInp1-Sel.OMSL")
  field(OUTC, "$(P)Dbus0SrcUnivInp0-Sel.OMSL")
  field(OUTD, "$(P)Dbus0SrcUnivInp1-Sel.OMSL")
  field(OUTE, "$(P)Dbus0SrcUnivInp2-Sel.OMSL")
  field(OUTF, "$(P)Dbus0SrcUnivInp3-Sel.OMSL")
  field(OUTG, "$(P)Dbus0SrcUnivInp4-Sel.OMSL")
  field(OUTH, "$(P)Dbus0SrcUnivInp5-Sel.OMSL")
}

record(dfanout, "$(P)Dbus0Omsl1-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus0SrcUnivInp6-Sel.OMSL")
  field(OUTB, "$(P)Dbus0SrcUnivInp7-Sel.OMSL")
  field(OUTC, "$(P)Dbus0SrcUnivInp8-Sel.OMSL")
  field(OUTD, "$(P)Dbus0SrcUnivInp9-Sel.OMSL")
  field(OUTE, "$(P)Dbus0SrcUnivInp10-Sel.OMSL")
}

record(waveform, "$(P)Dbus0Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)Dbus1Src-Sel") {
  field(DESC, "EVG DBUS Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(ZRST, "Off")
  field(ONST, "Front0")
  field(TWST, "Front1")
  field(THST, "Univ0")
  field(FRST, "Univ1")
  field(FVST, "Univ2")
  field(SXST, "Univ3")
  field(SVST, "Univ4")
  field(EIST, "Univ5")
  field(NIST, "Univ6")
  field(TEST, "Univ7")
  field(ELST, "Univ8")
  field(TVST, "Univ9")
  field(TTST, "Univ10")
  field(FTST, "Mxc 1")
  field(FFST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus1MapConv-Sel_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus1MapConv-Sel_") {
  field(ASG, "private")
  field(DTYP, "Raw Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1")
  field(THVL, "1")
  field(FRVL, "1")
  field(FVVL, "1")
  field(SXVL, "1")
  field(SVVL, "1")
  field(EIVL, "1")
  field(NIVL, "1")
  field(TEVL, "1")
  field(ELVL, "1")
  field(TVVL, "1")
  field(TTVL, "1")
  field(FTVL, "2")
  field(FFVL, "3")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus1Map-Sel PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus1Map-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):Dbus1, PROP=Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "ExtInp")
  field(TWST, "Mxc1")
  field(THST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)Dbus1Src-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)Dbus1Src-Sel.RVAL CP")
}

record(bo, "$(P)Dbus1SrcFrontInp0-Sel") {
  field(DESC, "Front Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)Dbus1SrcFrontInp1-Sel") {
  field(DESC, "Front Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)Dbus1SrcUnivInp0-Sel") {
  field(DESC, "Front Univ Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)Dbus1SrcUnivInp1-Sel") {
  field(DESC, "Front Univ Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)Dbus1SrcUnivInp2-Sel") {
  field(DESC, "Front Univ Input2 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)Dbus1SrcUnivInp3-Sel") {
  field(DESC, "Front Univ Input3 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B5 CP")
}

record(bo, "$(P)Dbus1SrcUnivInp4-Sel") {
  field(DESC, "Front Univ Input4 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B6 CP")
}

record(bo, "$(P)Dbus1SrcUnivInp5-Sel") {
  field(DESC, "Front Univ Input5 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B7 CP")
}

record(bo, "$(P)Dbus1SrcUnivInp6-Sel") {
  field(DESC, "Front Univ Input6 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B8 CP")
}

record(bo, "$(P)Dbus1SrcUnivInp7-Sel") {
  field(DESC, "Front Univ Input7 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.B9 CP")
}

record(bo, "$(P)Dbus1SrcUnivInp8-Sel") {
  field(DESC, "Front Univ Input8 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.BA CP")
}

record(bo, "$(P)Dbus1SrcUnivInp9-Sel") {
  field(DESC, "Front Univ Input9 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.BB CP")
}

record(bo, "$(P)Dbus1SrcUnivInp10-Sel") {
  field(DESC, "Front Univ Input10 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S1 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus1Src-MbbiDir_.BC CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)Dbus1Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus1Omsl0-FOut_ PP")
  field(OUTB, "$(P)Dbus1Omsl1-FOut_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)Dbus1Omsl0-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus1SrcFrontInp0-Sel.OMSL")
  field(OUTB, "$(P)Dbus1SrcFrontInp1-Sel.OMSL")
  field(OUTC, "$(P)Dbus1SrcUnivInp0-Sel.OMSL")
  field(OUTD, "$(P)Dbus1SrcUnivInp1-Sel.OMSL")
  field(OUTE, "$(P)Dbus1SrcUnivInp2-Sel.OMSL")
  field(OUTF, "$(P)Dbus1SrcUnivInp3-Sel.OMSL")
  field(OUTG, "$(P)Dbus1SrcUnivInp4-Sel.OMSL")
  field(OUTH, "$(P)Dbus1SrcUnivInp5-Sel.OMSL")
}

record(dfanout, "$(P)Dbus1Omsl1-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus1SrcUnivInp6-Sel.OMSL")
  field(OUTB, "$(P)Dbus1SrcUnivInp7-Sel.OMSL")
  field(OUTC, "$(P)Dbus1SrcUnivInp8-Sel.OMSL")
  field(OUTD, "$(P)Dbus1SrcUnivInp9-Sel.OMSL")
  field(OUTE, "$(P)Dbus1SrcUnivInp10-Sel.OMSL")
}

record(waveform, "$(P)Dbus1Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)Dbus2Src-Sel") {
  field(DESC, "EVG DBUS Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(ZRST, "Off")
  field(ONST, "Front0")
  field(TWST, "Front1")
  field(THST, "Univ0")
  field(FRST, "Univ1")
  field(FVST, "Univ2")
  field(SXST, "Univ3")
  field(SVST, "Univ4")
  field(EIST, "Univ5")
  field(NIST, "Univ6")
  field(TEST, "Univ7")
  field(ELST, "Univ8")
  field(TVST, "Univ9")
  field(TTST, "Univ10")
  field(FTST, "Mxc 2")
  field(FFST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus2MapConv-Sel_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus2MapConv-Sel_") {
  field(ASG, "private")
  field(DTYP, "Raw Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1")
  field(THVL, "1")
  field(FRVL, "1")
  field(FVVL, "1")
  field(SXVL, "1")
  field(SVVL, "1")
  field(EIVL, "1")
  field(NIVL, "1")
  field(TEVL, "1")
  field(ELVL, "1")
  field(TVVL, "1")
  field(TTVL, "1")
  field(FTVL, "2")
  field(FFVL, "3")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus2Map-Sel PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus2Map-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):Dbus2, PROP=Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "ExtInp")
  field(TWST, "Mxc2")
  field(THST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)Dbus2Src-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)Dbus2Src-Sel.RVAL CP")
}

record(bo, "$(P)Dbus2SrcFrontInp0-Sel") {
  field(DESC, "Front Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)Dbus2SrcFrontInp1-Sel") {
  field(DESC, "Front Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)Dbus2SrcUnivInp0-Sel") {
  field(DESC, "Front Univ Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)Dbus2SrcUnivInp1-Sel") {
  field(DESC, "Front Univ Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)Dbus2SrcUnivInp2-Sel") {
  field(DESC, "Front Univ Input2 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)Dbus2SrcUnivInp3-Sel") {
  field(DESC, "Front Univ Input3 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B5 CP")
}

record(bo, "$(P)Dbus2SrcUnivInp4-Sel") {
  field(DESC, "Front Univ Input4 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B6 CP")
}

record(bo, "$(P)Dbus2SrcUnivInp5-Sel") {
  field(DESC, "Front Univ Input5 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B7 CP")
}

record(bo, "$(P)Dbus2SrcUnivInp6-Sel") {
  field(DESC, "Front Univ Input6 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B8 CP")
}

record(bo, "$(P)Dbus2SrcUnivInp7-Sel") {
  field(DESC, "Front Univ Input7 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.B9 CP")
}

record(bo, "$(P)Dbus2SrcUnivInp8-Sel") {
  field(DESC, "Front Univ Input8 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.BA CP")
}

record(bo, "$(P)Dbus2SrcUnivInp9-Sel") {
  field(DESC, "Front Univ Input9 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.BB CP")
}

record(bo, "$(P)Dbus2SrcUnivInp10-Sel") {
  field(DESC, "Front Univ Input10 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S2 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus2Src-MbbiDir_.BC CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)Dbus2Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus2Omsl0-FOut_ PP")
  field(OUTB, "$(P)Dbus2Omsl1-FOut_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)Dbus2Omsl0-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus2SrcFrontInp0-Sel.OMSL")
  field(OUTB, "$(P)Dbus2SrcFrontInp1-Sel.OMSL")
  field(OUTC, "$(P)Dbus2SrcUnivInp0-Sel.OMSL")
  field(OUTD, "$(P)Dbus2SrcUnivInp1-Sel.OMSL")
  field(OUTE, "$(P)Dbus2SrcUnivInp2-Sel.OMSL")
  field(OUTF, "$(P)Dbus2SrcUnivInp3-Sel.OMSL")
  field(OUTG, "$(P)Dbus2SrcUnivInp4-Sel.OMSL")
  field(OUTH, "$(P)Dbus2SrcUnivInp5-Sel.OMSL")
}

record(dfanout, "$(P)Dbus2Omsl1-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus2SrcUnivInp6-Sel.OMSL")
  field(OUTB, "$(P)Dbus2SrcUnivInp7-Sel.OMSL")
  field(OUTC, "$(P)Dbus2SrcUnivInp8-Sel.OMSL")
  field(OUTD, "$(P)Dbus2SrcUnivInp9-Sel.OMSL")
  field(OUTE, "$(P)Dbus2SrcUnivInp10-Sel.OMSL")
}

record(waveform, "$(P)Dbus2Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)Dbus3Src-Sel") {
  field(DESC, "EVG DBUS Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(ZRST, "Off")
  field(ONST, "Front0")
  field(TWST, "Front1")
  field(THST, "Univ0")
  field(FRST, "Univ1")
  field(FVST, "Univ2")
  field(SXST, "Univ3")
  field(SVST, "Univ4")
  field(EIST, "Univ5")
  field(NIST, "Univ6")
  field(TEST, "Univ7")
  field(ELST, "Univ8")
  field(TVST, "Univ9")
  field(TTST, "Univ10")
  field(FTST, "Mxc 3")
  field(FFST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus3MapConv-Sel_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus3MapConv-Sel_") {
  field(ASG, "private")
  field(DTYP, "Raw Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1")
  field(THVL, "1")
  field(FRVL, "1")
  field(FVVL, "1")
  field(SXVL, "1")
  field(SVVL, "1")
  field(EIVL, "1")
  field(NIVL, "1")
  field(TEVL, "1")
  field(ELVL, "1")
  field(TVVL, "1")
  field(TTVL, "1")
  field(FTVL, "2")
  field(FFVL, "3")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus3Map-Sel PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus3Map-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):Dbus3, PROP=Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "ExtInp")
  field(TWST, "Mxc3")
  field(THST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)Dbus3Src-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)Dbus3Src-Sel.RVAL CP")
}

record(bo, "$(P)Dbus3SrcFrontInp0-Sel") {
  field(DESC, "Front Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)Dbus3SrcFrontInp1-Sel") {
  field(DESC, "Front Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)Dbus3SrcUnivInp0-Sel") {
  field(DESC, "Front Univ Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)Dbus3SrcUnivInp1-Sel") {
  field(DESC, "Front Univ Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)Dbus3SrcUnivInp2-Sel") {
  field(DESC, "Front Univ Input2 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)Dbus3SrcUnivInp3-Sel") {
  field(DESC, "Front Univ Input3 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B5 CP")
}

record(bo, "$(P)Dbus3SrcUnivInp4-Sel") {
  field(DESC, "Front Univ Input4 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B6 CP")
}

record(bo, "$(P)Dbus3SrcUnivInp5-Sel") {
  field(DESC, "Front Univ Input5 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B7 CP")
}

record(bo, "$(P)Dbus3SrcUnivInp6-Sel") {
  field(DESC, "Front Univ Input6 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B8 CP")
}

record(bo, "$(P)Dbus3SrcUnivInp7-Sel") {
  field(DESC, "Front Univ Input7 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.B9 CP")
}

record(bo, "$(P)Dbus3SrcUnivInp8-Sel") {
  field(DESC, "Front Univ Input8 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.BA CP")
}

record(bo, "$(P)Dbus3SrcUnivInp9-Sel") {
  field(DESC, "Front Univ Input9 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.BB CP")
}

record(bo, "$(P)Dbus3SrcUnivInp10-Sel") {
  field(DESC, "Front Univ Input10 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S3 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus3Src-MbbiDir_.BC CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)Dbus3Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus3Omsl0-FOut_ PP")
  field(OUTB, "$(P)Dbus3Omsl1-FOut_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)Dbus3Omsl0-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus3SrcFrontInp0-Sel.OMSL")
  field(OUTB, "$(P)Dbus3SrcFrontInp1-Sel.OMSL")
  field(OUTC, "$(P)Dbus3SrcUnivInp0-Sel.OMSL")
  field(OUTD, "$(P)Dbus3SrcUnivInp1-Sel.OMSL")
  field(OUTE, "$(P)Dbus3SrcUnivInp2-Sel.OMSL")
  field(OUTF, "$(P)Dbus3SrcUnivInp3-Sel.OMSL")
  field(OUTG, "$(P)Dbus3SrcUnivInp4-Sel.OMSL")
  field(OUTH, "$(P)Dbus3SrcUnivInp5-Sel.OMSL")
}

record(dfanout, "$(P)Dbus3Omsl1-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus3SrcUnivInp6-Sel.OMSL")
  field(OUTB, "$(P)Dbus3SrcUnivInp7-Sel.OMSL")
  field(OUTC, "$(P)Dbus3SrcUnivInp8-Sel.OMSL")
  field(OUTD, "$(P)Dbus3SrcUnivInp9-Sel.OMSL")
  field(OUTE, "$(P)Dbus3SrcUnivInp10-Sel.OMSL")
}

record(waveform, "$(P)Dbus3Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)Dbus4Src-Sel") {
  field(DESC, "EVG DBUS Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(ZRST, "Off")
  field(ONST, "Front0")
  field(TWST, "Front1")
  field(THST, "Univ0")
  field(FRST, "Univ1")
  field(FVST, "Univ2")
  field(SXST, "Univ3")
  field(SVST, "Univ4")
  field(EIST, "Univ5")
  field(NIST, "Univ6")
  field(TEST, "Univ7")
  field(ELST, "Univ8")
  field(TVST, "Univ9")
  field(TTST, "Univ10")
  field(FTST, "Mxc 4")
  field(FFST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus4MapConv-Sel_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus4MapConv-Sel_") {
  field(ASG, "private")
  field(DTYP, "Raw Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1")
  field(THVL, "1")
  field(FRVL, "1")
  field(FVVL, "1")
  field(SXVL, "1")
  field(SVVL, "1")
  field(EIVL, "1")
  field(NIVL, "1")
  field(TEVL, "1")
  field(ELVL, "1")
  field(TVVL, "1")
  field(TTVL, "1")
  field(FTVL, "2")
  field(FFVL, "3")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus4Map-Sel PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus4Map-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):Dbus4, PROP=Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "ExtInp")
  field(TWST, "Mxc4")
  field(THST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)Dbus4Src-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)Dbus4Src-Sel.RVAL CP")
}

record(bo, "$(P)Dbus4SrcFrontInp0-Sel") {
  field(DESC, "Front Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)Dbus4SrcFrontInp1-Sel") {
  field(DESC, "Front Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)Dbus4SrcUnivInp0-Sel") {
  field(DESC, "Front Univ Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)Dbus4SrcUnivInp1-Sel") {
  field(DESC, "Front Univ Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)Dbus4SrcUnivInp2-Sel") {
  field(DESC, "Front Univ Input2 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)Dbus4SrcUnivInp3-Sel") {
  field(DESC, "Front Univ Input3 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B5 CP")
}

record(bo, "$(P)Dbus4SrcUnivInp4-Sel") {
  field(DESC, "Front Univ Input4 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B6 CP")
}

record(bo, "$(P)Dbus4SrcUnivInp5-Sel") {
  field(DESC, "Front Univ Input5 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B7 CP")
}

record(bo, "$(P)Dbus4SrcUnivInp6-Sel") {
  field(DESC, "Front Univ Input6 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B8 CP")
}

record(bo, "$(P)Dbus4SrcUnivInp7-Sel") {
  field(DESC, "Front Univ Input7 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.B9 CP")
}

record(bo, "$(P)Dbus4SrcUnivInp8-Sel") {
  field(DESC, "Front Univ Input8 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.BA CP")
}

record(bo, "$(P)Dbus4SrcUnivInp9-Sel") {
  field(DESC, "Front Univ Input9 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.BB CP")
}

record(bo, "$(P)Dbus4SrcUnivInp10-Sel") {
  field(DESC, "Front Univ Input10 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S4 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus4Src-MbbiDir_.BC CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)Dbus4Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus4Omsl0-FOut_ PP")
  field(OUTB, "$(P)Dbus4Omsl1-FOut_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)Dbus4Omsl0-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus4SrcFrontInp0-Sel.OMSL")
  field(OUTB, "$(P)Dbus4SrcFrontInp1-Sel.OMSL")
  field(OUTC, "$(P)Dbus4SrcUnivInp0-Sel.OMSL")
  field(OUTD, "$(P)Dbus4SrcUnivInp1-Sel.OMSL")
  field(OUTE, "$(P)Dbus4SrcUnivInp2-Sel.OMSL")
  field(OUTF, "$(P)Dbus4SrcUnivInp3-Sel.OMSL")
  field(OUTG, "$(P)Dbus4SrcUnivInp4-Sel.OMSL")
  field(OUTH, "$(P)Dbus4SrcUnivInp5-Sel.OMSL")
}

record(dfanout, "$(P)Dbus4Omsl1-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus4SrcUnivInp6-Sel.OMSL")
  field(OUTB, "$(P)Dbus4SrcUnivInp7-Sel.OMSL")
  field(OUTC, "$(P)Dbus4SrcUnivInp8-Sel.OMSL")
  field(OUTD, "$(P)Dbus4SrcUnivInp9-Sel.OMSL")
  field(OUTE, "$(P)Dbus4SrcUnivInp10-Sel.OMSL")
}

record(waveform, "$(P)Dbus4Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)Dbus5Src-Sel") {
  field(DESC, "EVG DBUS Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(ZRST, "Off")
  field(ONST, "Front0")
  field(TWST, "Front1")
  field(THST, "Univ0")
  field(FRST, "Univ1")
  field(FVST, "Univ2")
  field(SXST, "Univ3")
  field(SVST, "Univ4")
  field(EIST, "Univ5")
  field(NIST, "Univ6")
  field(TEST, "Univ7")
  field(ELST, "Univ8")
  field(TVST, "Univ9")
  field(TTST, "Univ10")
  field(FTST, "Mxc 5")
  field(FFST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus5MapConv-Sel_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus5MapConv-Sel_") {
  field(ASG, "private")
  field(DTYP, "Raw Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1")
  field(THVL, "1")
  field(FRVL, "1")
  field(FVVL, "1")
  field(SXVL, "1")
  field(SVVL, "1")
  field(EIVL, "1")
  field(NIVL, "1")
  field(TEVL, "1")
  field(ELVL, "1")
  field(TVVL, "1")
  field(TTVL, "1")
  field(FTVL, "2")
  field(FFVL, "3")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus5Map-Sel PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus5Map-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):Dbus5, PROP=Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "ExtInp")
  field(TWST, "Mxc5")
  field(THST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)Dbus5Src-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)Dbus5Src-Sel.RVAL CP")
}

record(bo, "$(P)Dbus5SrcFrontInp0-Sel") {
  field(DESC, "Front Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)Dbus5SrcFrontInp1-Sel") {
  field(DESC, "Front Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)Dbus5SrcUnivInp0-Sel") {
  field(DESC, "Front Univ Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)Dbus5SrcUnivInp1-Sel") {
  field(DESC, "Front Univ Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)Dbus5SrcUnivInp2-Sel") {
  field(DESC, "Front Univ Input2 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)Dbus5SrcUnivInp3-Sel") {
  field(DESC, "Front Univ Input3 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B5 CP")
}

record(bo, "$(P)Dbus5SrcUnivInp4-Sel") {
  field(DESC, "Front Univ Input4 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B6 CP")
}

record(bo, "$(P)Dbus5SrcUnivInp5-Sel") {
  field(DESC, "Front Univ Input5 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B7 CP")
}

record(bo, "$(P)Dbus5SrcUnivInp6-Sel") {
  field(DESC, "Front Univ Input6 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B8 CP")
}

record(bo, "$(P)Dbus5SrcUnivInp7-Sel") {
  field(DESC, "Front Univ Input7 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.B9 CP")
}

record(bo, "$(P)Dbus5SrcUnivInp8-Sel") {
  field(DESC, "Front Univ Input8 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.BA CP")
}

record(bo, "$(P)Dbus5SrcUnivInp9-Sel") {
  field(DESC, "Front Univ Input9 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.BB CP")
}

record(bo, "$(P)Dbus5SrcUnivInp10-Sel") {
  field(DESC, "Front Univ Input10 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S5 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus5Src-MbbiDir_.BC CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)Dbus5Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus5Omsl0-FOut_ PP")
  field(OUTB, "$(P)Dbus5Omsl1-FOut_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)Dbus5Omsl0-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus5SrcFrontInp0-Sel.OMSL")
  field(OUTB, "$(P)Dbus5SrcFrontInp1-Sel.OMSL")
  field(OUTC, "$(P)Dbus5SrcUnivInp0-Sel.OMSL")
  field(OUTD, "$(P)Dbus5SrcUnivInp1-Sel.OMSL")
  field(OUTE, "$(P)Dbus5SrcUnivInp2-Sel.OMSL")
  field(OUTF, "$(P)Dbus5SrcUnivInp3-Sel.OMSL")
  field(OUTG, "$(P)Dbus5SrcUnivInp4-Sel.OMSL")
  field(OUTH, "$(P)Dbus5SrcUnivInp5-Sel.OMSL")
}

record(dfanout, "$(P)Dbus5Omsl1-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus5SrcUnivInp6-Sel.OMSL")
  field(OUTB, "$(P)Dbus5SrcUnivInp7-Sel.OMSL")
  field(OUTC, "$(P)Dbus5SrcUnivInp8-Sel.OMSL")
  field(OUTD, "$(P)Dbus5SrcUnivInp9-Sel.OMSL")
  field(OUTE, "$(P)Dbus5SrcUnivInp10-Sel.OMSL")
}

record(waveform, "$(P)Dbus5Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)Dbus6Src-Sel") {
  field(DESC, "EVG DBUS Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(ZRST, "Off")
  field(ONST, "Front0")
  field(TWST, "Front1")
  field(THST, "Univ0")
  field(FRST, "Univ1")
  field(FVST, "Univ2")
  field(SXST, "Univ3")
  field(SVST, "Univ4")
  field(EIST, "Univ5")
  field(NIST, "Univ6")
  field(TEST, "Univ7")
  field(ELST, "Univ8")
  field(TVST, "Univ9")
  field(TTST, "Univ10")
  field(FTST, "Mxc 6")
  field(FFST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus6MapConv-Sel_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus6MapConv-Sel_") {
  field(ASG, "private")
  field(DTYP, "Raw Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1")
  field(THVL, "1")
  field(FRVL, "1")
  field(FVVL, "1")
  field(SXVL, "1")
  field(SVVL, "1")
  field(EIVL, "1")
  field(NIVL, "1")
  field(TEVL, "1")
  field(ELVL, "1")
  field(TVVL, "1")
  field(TTVL, "1")
  field(FTVL, "2")
  field(FFVL, "3")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus6Map-Sel PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus6Map-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):Dbus6, PROP=Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "ExtInp")
  field(TWST, "Mxc6")
  field(THST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)Dbus6Src-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)Dbus6Src-Sel.RVAL CP")
}

record(bo, "$(P)Dbus6SrcFrontInp0-Sel") {
  field(DESC, "Front Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)Dbus6SrcFrontInp1-Sel") {
  field(DESC, "Front Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)Dbus6SrcUnivInp0-Sel") {
  field(DESC, "Front Univ Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)Dbus6SrcUnivInp1-Sel") {
  field(DESC, "Front Univ Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)Dbus6SrcUnivInp2-Sel") {
  field(DESC, "Front Univ Input2 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)Dbus6SrcUnivInp3-Sel") {
  field(DESC, "Front Univ Input3 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B5 CP")
}

record(bo, "$(P)Dbus6SrcUnivInp4-Sel") {
  field(DESC, "Front Univ Input4 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B6 CP")
}

record(bo, "$(P)Dbus6SrcUnivInp5-Sel") {
  field(DESC, "Front Univ Input5 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B7 CP")
}

record(bo, "$(P)Dbus6SrcUnivInp6-Sel") {
  field(DESC, "Front Univ Input6 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B8 CP")
}

record(bo, "$(P)Dbus6SrcUnivInp7-Sel") {
  field(DESC, "Front Univ Input7 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.B9 CP")
}

record(bo, "$(P)Dbus6SrcUnivInp8-Sel") {
  field(DESC, "Front Univ Input8 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.BA CP")
}

record(bo, "$(P)Dbus6SrcUnivInp9-Sel") {
  field(DESC, "Front Univ Input9 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.BB CP")
}

record(bo, "$(P)Dbus6SrcUnivInp10-Sel") {
  field(DESC, "Front Univ Input10 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S6 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus6Src-MbbiDir_.BC CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)Dbus6Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus6Omsl0-FOut_ PP")
  field(OUTB, "$(P)Dbus6Omsl1-FOut_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)Dbus6Omsl0-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus6SrcFrontInp0-Sel.OMSL")
  field(OUTB, "$(P)Dbus6SrcFrontInp1-Sel.OMSL")
  field(OUTC, "$(P)Dbus6SrcUnivInp0-Sel.OMSL")
  field(OUTD, "$(P)Dbus6SrcUnivInp1-Sel.OMSL")
  field(OUTE, "$(P)Dbus6SrcUnivInp2-Sel.OMSL")
  field(OUTF, "$(P)Dbus6SrcUnivInp3-Sel.OMSL")
  field(OUTG, "$(P)Dbus6SrcUnivInp4-Sel.OMSL")
  field(OUTH, "$(P)Dbus6SrcUnivInp5-Sel.OMSL")
}

record(dfanout, "$(P)Dbus6Omsl1-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus6SrcUnivInp6-Sel.OMSL")
  field(OUTB, "$(P)Dbus6SrcUnivInp7-Sel.OMSL")
  field(OUTC, "$(P)Dbus6SrcUnivInp8-Sel.OMSL")
  field(OUTD, "$(P)Dbus6SrcUnivInp9-Sel.OMSL")
  field(OUTE, "$(P)Dbus6SrcUnivInp10-Sel.OMSL")
}

record(waveform, "$(P)Dbus6Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)Dbus7Src-Sel") {
  field(DESC, "EVG DBUS Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(ZRST, "Off")
  field(ONST, "Front0")
  field(TWST, "Front1")
  field(THST, "Univ0")
  field(FRST, "Univ1")
  field(FVST, "Univ2")
  field(SXST, "Univ3")
  field(SVST, "Univ4")
  field(EIST, "Univ5")
  field(NIST, "Univ6")
  field(TEST, "Univ7")
  field(ELST, "Univ8")
  field(TVST, "Univ9")
  field(TTST, "Univ10")
  field(FTST, "Mxc 7")
  field(FFST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus7MapConv-Sel_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus7MapConv-Sel_") {
  field(ASG, "private")
  field(DTYP, "Raw Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1")
  field(THVL, "1")
  field(FRVL, "1")
  field(FVVL, "1")
  field(SXVL, "1")
  field(SVVL, "1")
  field(EIVL, "1")
  field(NIVL, "1")
  field(TEVL, "1")
  field(ELVL, "1")
  field(TVVL, "1")
  field(TTVL, "1")
  field(FTVL, "2")
  field(FFVL, "3")

  field(IVOA, "Don't drive outputs")
  field(OUT, "$(P)Dbus7Map-Sel PP")
  info(autosaveFields_pass0, "VAL")
}

record(mbbo, "$(P)Dbus7Map-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):Dbus7, PROP=Source")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "ExtInp")
  field(TWST, "Mxc7")
  field(THST, "Up EVG")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

#
# If the selected source is an external input then when we need to map that
# Input to the Distributed Bus
#
record(mbbiDirect, "$(P)Dbus7Src-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)Dbus7Src-Sel.RVAL CP")
}

record(bo, "$(P)Dbus7SrcFrontInp0-Sel") {
  field(DESC, "Front Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B0 CP")
}

record(bo, "$(P)Dbus7SrcFrontInp1-Sel") {
  field(DESC, "Front Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B1 CP")
}

record(bo, "$(P)Dbus7SrcUnivInp0-Sel") {
  field(DESC, "Front Univ Input0 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B2 CP")
}

record(bo, "$(P)Dbus7SrcUnivInp1-Sel") {
  field(DESC, "Front Univ Input1 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B3 CP")
}

record(bo, "$(P)Dbus7SrcUnivInp2-Sel") {
  field(DESC, "Front Univ Input2 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B4 CP")
}

record(bo, "$(P)Dbus7SrcUnivInp3-Sel") {
  field(DESC, "Front Univ Input3 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B5 CP")
}

record(bo, "$(P)Dbus7SrcUnivInp4-Sel") {
  field(DESC, "Front Univ Input4 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B6 CP")
}

record(bo, "$(P)Dbus7SrcUnivInp5-Sel") {
  field(DESC, "Front Univ Input5 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B7 CP")
}

record(bo, "$(P)Dbus7SrcUnivInp6-Sel") {
  field(DESC, "Front Univ Input6 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B8 CP")
}

record(bo, "$(P)Dbus7SrcUnivInp7-Sel") {
  field(DESC, "Front Univ Input7 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.B9 CP")
}

record(bo, "$(P)Dbus7SrcUnivInp8-Sel") {
  field(DESC, "Front Univ Input8 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.BA CP")
}

record(bo, "$(P)Dbus7SrcUnivInp9-Sel") {
  field(DESC, "Front Univ Input9 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.BB CP")
}

record(bo, "$(P)Dbus7SrcUnivInp10-Sel") {
  field(DESC, "Front Univ Input10 on Dbus")
  field(DTYP, "EVG Dbus")
  field(OUT , "#C0 S7 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)Dbus7Src-MbbiDir_.BC CP")
}

#
# By default OMSL field for the *Src* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *Src* records should be
# "supervisory" mode.
#
record(dfanout, "$(P)Dbus7Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus7Omsl0-FOut_ PP")
  field(OUTB, "$(P)Dbus7Omsl1-FOut_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)Dbus7Omsl0-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus7SrcFrontInp0-Sel.OMSL")
  field(OUTB, "$(P)Dbus7SrcFrontInp1-Sel.OMSL")
  field(OUTC, "$(P)Dbus7SrcUnivInp0-Sel.OMSL")
  field(OUTD, "$(P)Dbus7SrcUnivInp1-Sel.OMSL")
  field(OUTE, "$(P)Dbus7SrcUnivInp2-Sel.OMSL")
  field(OUTF, "$(P)Dbus7SrcUnivInp3-Sel.OMSL")
  field(OUTG, "$(P)Dbus7SrcUnivInp4-Sel.OMSL")
  field(OUTH, "$(P)Dbus7SrcUnivInp5-Sel.OMSL")
}

record(dfanout, "$(P)Dbus7Omsl1-FOut_") {
  field(ASG, "private")
  #field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)Dbus7SrcUnivInp6-Sel.OMSL")
  field(OUTB, "$(P)Dbus7SrcUnivInp7-Sel.OMSL")
  field(OUTC, "$(P)Dbus7SrcUnivInp8-Sel.OMSL")
  field(OUTD, "$(P)Dbus7SrcUnivInp9-Sel.OMSL")
  field(OUTE, "$(P)Dbus7SrcUnivInp10-Sel.OMSL")
}

record(waveform, "$(P)Dbus7Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)EvtClkSource-Sel") {
  field(DESC, "EVG Evt Clk Source")
  field(DTYP, "Obj Prop uint16")
  field(OUT,  "@OBJ=$(EVG), PROP=Source")
  field(PINI, "YES")
  field(VAL,  "2")
  field(ZRST, "FracSyn (Int)")
  field(ONST, "RF (Ext)")
  field(TWST, "Upstream (fanout)")
  field(THST, "Upstream/2")
  field(FRST, "Split")
  field(FVST, "PXIe 100MHz")
  field(SXST, "PXIe 10MHz")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "4")
  field(THVL, "7")
  field(FRVL, "5")
  field(FVVL, "2")
  field(SXVL, "6")
  field(FLNK, "$(P)EvtClkSource-RB")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)EvtClkSource-RB") {
  field(DESC, "EVG Evt Clk Source")
  field(DTYP, "Obj Prop uint16")
  field(INP , "@OBJ=$(EVG), PROP=Source")
  field(ZRST, "FracSyn (Int)")
  field(ONST, "RF (Ext)")
  field(TWST, "Upstream (fanout)")
  field(THST, "Upstream/2")
  field(FRST, "Split")
  field(FVST, "PXIe 100MHz")
  field(SXST, "PXIe 10MHz")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "4")
  field(THVL, "7")
  field(FRVL, "5")
  field(FVVL, "2")
  field(SXVL, "6")
  field(FLNK, "$(P)EvtClkFrequency-RB")
}

record(ao, "$(P)EvtClkRFFreq-SP") {
  field(DESC, "EVG RF Frequency")
  field(DTYP, "Obj Prop double")
  field(OUT,  "@OBJ=$(EVG), PROP=RFFreq")
  field(PINI, "YES")
  field(VAL,  "$(FRF=499.68)")
  field(UDF,  "0")
  field(HIHI, "1600")
  field(LOLO, "50")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(EGU,  "MHz")
  field(HOPR, "1600")
  field(LOPR, "50")
  field(DRVH, "1600")
  field(DRVL, "50")
  field(PREC, "3")
  field(FLNK, "$(P)EvtClkRFFreq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)EvtClkRFFreq-RB") {
  field(DESC, "EVG RF Frequency")
  field(DTYP, "Obj Prop double")
  field(INP,  "@OBJ=$(EVG), PROP=RFFreq")
  field(HIHI, "1600")
  field(LOLO, "50")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(EGU,  "MHz")
  field(HOPR, "1600")
  field(LOPR, "50")
  field(PREC, "3")
  field(FLNK, "$(P)EvtClkFrequency-RB")
}

record(longout, "$(P)EvtClkRFDiv-SP") {
  field(DESC, "RF Divider")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG), PROP=RFDiv")
  field(PINI, "YES")
  field(VAL,  "4")
  field(UDF,  "0")
  field(HIHI, "33")
  field(LOLO, "0")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)EvtClkRFDiv-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)EvtClkRFDiv-RB") {
  field(DESC, "RF Divider")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG), PROP=RFDiv")
  field(HIHI, "33")
  field(LOLO, "0")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)EvtClkFrequency-RB")
}

record(ao, "$(P)EvtClkFracSynFreq-SP") {
  field(DESC, "Fractional Synthesizer Freq")
  field(DTYP, "Obj Prop double")
  field(OUT,  "@OBJ=$(EVG), PROP=FracSynFreq")
  field(EGU,  "MHz")
  field(PINI, "YES")
  field(VAL,  "$(FEVT=124.916)")
  field(UDF,  "0")
  field(HIHI, "143.3")
  field(LOLO, "49.5")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HOPR, "142.8")
  field(LOPR, "50")
  field(DRVH, "142.8")
  field(DRVL, "50")
  field(PREC, "3")
  field(FLNK, "$(P)EvtClkFracSynFreq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)EvtClkFracSynFreq-RB") {
  field(DESC, "Fractional Synthesizer Freq")
  field(DTYP, "Obj Prop double")
  field(INP,  "@OBJ=$(EVG), PROP=FracSynFreq")
  field(EGU,  "MHz")
  field(HIHI, "143.3")
  field(LOLO, "49.5")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(PREC, "3")
  field(FLNK, "$(P)EvtClkFrequency-RB")
}

record(ai, "$(P)EvtClkFrequency-RB") {
  field(DESC, "EVG Event Clock Frequecny")
  field(DTYP, "Obj Prop double")
  field(INP,  "@OBJ=$(EVG), PROP=Frequency")
  field(EGU,  "MHz")
  field(PREC, "3")
}

record(bi, "$(P)EvtClkPll-Sts") {
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG), PROP=PLL Lock Status")
  field(SCAN, "1 second")
  field(PINI, "YES")
  field(DESC, "Status of PLL")
  field(ZNAM, "Error")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(mbbo, "$(P)EvtClkPLL-Bandwidth-Sel") {
    field( DESC, "EVG Evt Clock Bandwidth")
    field( DTYP, "Obj Prop uint16")
    field( OUT,  "@OBJ=$(EVG), PROP=PLL Bandwidth")
    field( PINI, "YES")
    field( VAL,  "2")
    field( ZRST, "Narrow")
    field( ONST, "Med. Narrow")
    field( TWST, "Nominal")
    field( THST, "Med. Wide")
    field( FRST, "Wide")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRVL, "4")
    field( FVSV, "INVALID")
    field( SXSV, "INVALID")
    field( SVSV, "INVALID")
    field( EISV, "INVALID")
    field( NISV, "INVALID")
    field( TESV, "INVALID")
    field( ELSV, "INVALID")
    field( TVSV, "INVALID")
    field( TTSV, "INVALID")
    field( FTSV, "INVALID")
    field( FFSV, "INVALID")
    field( UNSV, "INVALID")
    field( FLNK, "$(P)EvtClkPLL-Bandwidth-RB")
    info( autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)EvtClkPLL-Bandwidth-RB") {
    field( DESC, "EVG Evt Clock Bandwidth")
    field( DTYP, "Obj Prop uint16")
    field( INP,  "@OBJ=$(EVG), PROP=PLL Bandwidth")
    field( ZRST, "Narrow")
    field( ONST, "Med. Narrow")
    field( TWST, "Nominal")
    field( THST, "Med. Wide")
    field( FRST, "Wide")
    field( ZRVL, "0")
    field( ONVL, "1")
    field( TWVL, "2")
    field( THVL, "3")
    field( FRVL, "4")
}
record(bo, "$(P)InpFront0EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):FrontInp0, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B0 CP")
  field(FLNK, "$(P)InpFront0EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpFront0EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):FrontInp0, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpFront0FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):FrontInp0, PROP=FPMASK")
  field(FLNK, "$(P)InpFront0FPMask-RB")
}
record(ai, "$(P)InpFront0FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):FrontInp0, PROP=FPMASK")
}
record(bo, "$(P)InpFront1EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):FrontInp1, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B1 CP")
  field(FLNK, "$(P)InpFront1EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpFront1EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):FrontInp1, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpFront1FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):FrontInp1, PROP=FPMASK")
  field(FLNK, "$(P)InpFront1FPMask-RB")
}
record(ai, "$(P)InpFront1FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):FrontInp1, PROP=FPMASK")
}
record(bo, "$(P)InpFront2EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):FrontInp2, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B2 CP")
  field(FLNK, "$(P)InpFront2EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpFront2EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):FrontInp2, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpFront2FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):FrontInp2, PROP=FPMASK")
  field(FLNK, "$(P)InpFront2FPMask-RB")
}
record(ai, "$(P)InpFront2FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):FrontInp2, PROP=FPMASK")
}
record(bo, "$(P)InpUniv0EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp0, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B3 CP")
  field(FLNK, "$(P)InpUniv0EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv0EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp0, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv0FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp0, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv0FPMask-RB")
}
record(ai, "$(P)InpUniv0FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp0, PROP=FPMASK")
}
record(bo, "$(P)InpUniv1EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp1, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B4 CP")
  field(FLNK, "$(P)InpUniv1EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv1EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp1, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv1FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp1, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv1FPMask-RB")
}
record(ai, "$(P)InpUniv1FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp1, PROP=FPMASK")
}
record(bo, "$(P)InpUniv2EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp2, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B5 CP")
  field(FLNK, "$(P)InpUniv2EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv2EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp2, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv2FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp2, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv2FPMask-RB")
}
record(ai, "$(P)InpUniv2FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp2, PROP=FPMASK")
}
record(bo, "$(P)InpUniv3EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp3, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B6 CP")
  field(FLNK, "$(P)InpUniv3EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv3EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp3, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv3FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp3, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv3FPMask-RB")
}
record(ai, "$(P)InpUniv3FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp3, PROP=FPMASK")
}
record(bo, "$(P)InpUniv4EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp4, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B7 CP")
  field(FLNK, "$(P)InpUniv4EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv4EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp4, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv4FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp4, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv4FPMask-RB")
}
record(ai, "$(P)InpUniv4FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp4, PROP=FPMASK")
}
record(bo, "$(P)InpUniv5EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp5, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B8 CP")
  field(FLNK, "$(P)InpUniv5EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv5EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp5, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv5FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp5, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv5FPMask-RB")
}
record(ai, "$(P)InpUniv5FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp5, PROP=FPMASK")
}
record(bo, "$(P)InpUniv6EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp6, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.B9 CP")
  field(FLNK, "$(P)InpUniv6EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv6EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp6, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv6FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp6, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv6FPMask-RB")
}
record(ai, "$(P)InpUniv6FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp6, PROP=FPMASK")
}
record(bo, "$(P)InpUniv7EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp7, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.BA CP")
  field(FLNK, "$(P)InpUniv7EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv7EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp7, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv7FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp7, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv7FPMask-RB")
}
record(ai, "$(P)InpUniv7FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp7, PROP=FPMASK")
}
record(bo, "$(P)InpUniv8EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp8, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.BB CP")
  field(FLNK, "$(P)InpUniv8EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv8EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp8, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv8FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp8, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv8FPMask-RB")
}
record(ai, "$(P)InpUniv8FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp8, PROP=FPMASK")
}
record(bo, "$(P)InpUniv9EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp9, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.BC CP")
  field(FLNK, "$(P)InpUniv9EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv9EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp9, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv9FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp9, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv9FPMask-RB")
}
record(ai, "$(P)InpUniv9FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp9, PROP=FPMASK")
}
record(bo, "$(P)InpUniv10EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp10, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp-MbbiDir_.BD CP")
  field(FLNK, "$(P)InpUniv10EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv10EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp10, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv10FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp10, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv10FPMask-RB")
}
record(ai, "$(P)InpUniv10FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp10, PROP=FPMASK")
}
record(bo, "$(P)InpUniv11EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp11, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp1-MbbiDir_.B0 CP")
  field(FLNK, "$(P)InpUniv11EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv11EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp11, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv11FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp11, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv11FPMask-RB")
}
record(ai, "$(P)InpUniv11FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp11, PROP=FPMASK")
}
record(bo, "$(P)InpUniv12EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp12, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp1-MbbiDir_.B1 CP")
  field(FLNK, "$(P)InpUniv12EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv12EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp12, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv12FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp12, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv12FPMask-RB")
}
record(ai, "$(P)InpUniv12FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp12, PROP=FPMASK")
}
record(bo, "$(P)InpUniv13EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp13, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp1-MbbiDir_.B2 CP")
  field(FLNK, "$(P)InpUniv13EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv13EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp13, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv13FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp13, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv13FPMask-RB")
}
record(ai, "$(P)InpUniv13FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp13, PROP=FPMASK")
}
record(bo, "$(P)InpUniv14EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp14, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp1-MbbiDir_.B3 CP")
  field(FLNK, "$(P)InpUniv14EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv14EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp14, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv14FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp14, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv14FPMask-RB")
}
record(ai, "$(P)InpUniv14FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp14, PROP=FPMASK")
}
record(bo, "$(P)InpUniv15EnaIrq-Sel") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):UnivInp15, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(OMSL, "closed_loop")
    # see evgMrm.db
  field(DOL,  "$(P)PpsInp1-MbbiDir_.B4 CP")
  field(FLNK, "$(P)InpUniv15EnaIrq-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)InpUniv15EnaIrq-RB") {
  field(DESC, "Enable External Input IRQ")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):UnivInp15, PROP=IRQ")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

record(ao, "$(P)InpUniv15FPMask-Sel") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):UnivInp15, PROP=FPMASK")
  field(FLNK, "$(P)InpUniv15FPMask-RB")
}
record(ai, "$(P)InpUniv15FPMask-RB") {
  field(DESC, "FPxMask")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):UnivInp15, PROP=FPMASK")
}
record(mbbo, "$(P)Enable-Sel") {
  field(DESC, "EVG Master Enable")
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG), PROP=Enable")
  field(ZRST, "Disabled")
  field(ONST, "Enabled")
  field(TWST, "Ena Master")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(PINI, "RUNNING")
  field(VAL,  "1")
  field(FLNK, "$(P)Enable-RB")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)Enable-RB") {
  field(DESC, "EVG Master Enable")
  field(DTYP, "Obj Prop uint16")
  field(INP , "@OBJ=$(EVG), PROP=Enable")
  field(ZRST, "Disabled")
  field(ONST, "Enabled")
  field(TWST, "Ena Master")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
}

record(stringin, "$(P)FwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG), PROP=Version")
  field(PINI, "YES")
  field(DESC, "Firmware version")
}

record(stringin, "$(P)SwVer-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG), PROP=Sw Version")
  field(PINI, "YES")
  field(DESC, "Software version")
}

record(stringin, "$(P)CommitHash-I") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG), PROP=CommitHash")
  field(PINI, "YES")
  field(DESC, "Commit hash")
}

record(bo, "$(P)ResetMxc-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG), PROP=Reset MXC")
  field(DESC, "EVG Reset MXC")
  field(PINI, "YES")
  field(VAL, "1")
  field(UDF, "0")
}

record(longout, "$(P)SendEvt-SP") {
  field(DESC, "EVG Software Event Code")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG), PROP=EvtCode")
  field(UDF,  "0")
  field(PINI, "YES") # so users don't complain about INVALID/UDF.  Safe as long as VAL=0. aka never autosave!
  field(VAL,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
    alias("$(P)SoftEvtEvtCode-SP")
}

record (stringin, "$(P)Timestamp-RB") {
  field(DTYP, "Obj Prop string")
  field(INP , "@OBJ=$(EVG), PROP=NextSecond")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)TimeErr-I")
}

record(bo, "$(P)SimTimestamp-Sel") {
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG), PROP=SimTime")
  field(OMSL, "closed_loop")
  field(DOL , "$(P)PpsInp-MbbiDir_.BF CP")
  field(ZNAM, "Normal")
  field(ONAM, "Simulate")
}

record(ai, "$(P)TimeErr-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG), PROP=Time Error")
}

record(bo,"$(P)SyncTimestamp-Cmd" ) {
  field(DTYP, "Obj Prop command")
  field(OUT , "@OBJ=$(EVG), PROP=Sync TS")
  field(DESC, "EVG Sync TimeStamp")
}

record(mbbo, "$(P)PpsInp-Sel") {
  field(DESC, "EVG Pps Input")
  field(PINI, "YES")
  field(UDF,  "0")
  field(VAL,  "0")
  field(ZRST, "None")
  field(ONST, "Front0")
  field(TWST, "Front1")
  field(THST, "Univ0")
  field(FRST, "Univ1")
  field(FVST, "Univ2")
  field(SXST, "Univ3")
  field(SVST, "Sys Clk")
  field(EIST, "Front2")
  field(NIST, "Univ4")
  field(TEST, "Univ5")
  field(ELST, "Univ6")
  field(TVST, "Univ7")
  field(TTST, "Univ8")
  field(FTST, "Univ9")
  field(FFST, "Univ10")
  field(ZRVL, "0x0")
  field(ONVL, "0x1")
  field(TWVL, "0x2")
  field(THVL, "0x4")
  field(FRVL, "0x8")
  field(FVVL, "0x10")
  field(SXVL, "0x20")
  field(SVVL, "0x8000")
  field(EIVL, "0x40")
  field(NIVL, "0x80")
  field(TEVL, "0x100")
  field(ELVL, "0x200")
  field(TVVL, "0x400")
  field(TTVL, "0x800")
  field(FTVL, "0x1000")
  field(FFVL, "0x2000")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)PpsInp-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

#
# Each bit of the PpsInp-MbbiDir record is used to toggle the external input
# interrupt of the corresponding external input.
#
record(mbbiDirect, "$(P)PpsInp-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Pps Input")
  field(INP,  "$(P)PpsInp-Sel.RVAL NPP")
}
record(mbbo, "$(P)PpsInp1-Sel") {
  field(DESC, "EVG Pps Input")
  field(PINI, "YES")
  field(UDF,  "0")
  field(VAL,  "0")
  field(ZRST, "None")
  field(ONST, "UnivInp11")
  field(TWST, "UnivInp12")
  field(THST, "UnivInp13")
  field(FRST, "UnivInp14")
  field(FVST, "UnivInp15")
  field(ZRVL, "0x0")
  field(ONVL, "0x1")
  field(TWVL, "0x2")
  field(THVL, "0x4")
  field(FRVL, "0x8")
  field(FVVL, "0x10")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)PpsInp1-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

#
# Each bit of the PpsInp-MbbiDir record is used to toggle the external input
# interrupt of the corresponding external input.
#
record(mbbiDirect, "$(P)PpsInp1-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Pps Input")
  field(INP,  "$(P)PpsInp1-Sel.RVAL NPP")
}
record(longin, "$(P)DbusStatus-RB" ) {
  field(DESC, "EVG Dbus Status")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG), PROP=DbusStatus")
  info(autosaveFields_pass0, "SCAN")
}
record(bi, "$(P)Mxc0Status-RB") {
  field(DESC, "EVG Mux Output Status")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc0, PROP=Status")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)Mxc0Polarity-Sel") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):Mxc0, PROP=Polarity")
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
  field(FLNK, "$(P)Mxc0Polarity-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)Mxc0Polarity-RB") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc0, PROP=Polarity")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
}

record(ao, "$(P)Mxc0Frequency-SP") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):Mxc0, PROP=Frequency")
  field(EGU , "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(DRVH, "62500000")
  field(DRVL, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc0Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)Mxc0Frequency-RB") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):Mxc0, PROP=Frequency")
  field(EGU,  "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc0Prescaler-RB")
}

record(longout, "$(P)Mxc0Prescaler-SP") {
  field(DESC, "EVG Mux Prescaler")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):Mxc0, PROP=Prescaler")
  field(PINI, "YES")
  field(VAL,  "124920")
  field(UDF,  "0")
  field(EGU, "Evt Clk Tick")
  field(FLNK, "$(P)Mxc0Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin , "$(P)Mxc0Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):Mxc0, PROP=Prescaler")
  field(DESC, "EVG Mux Prescaler RB")
  field(FLNK, "$(P)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)Mxc0EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)Mxc0Frequency-RB")
}

record(waveform, "$(P)Mxc0Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)Mxc1Status-RB") {
  field(DESC, "EVG Mux Output Status")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc1, PROP=Status")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)Mxc1Polarity-Sel") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):Mxc1, PROP=Polarity")
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
  field(FLNK, "$(P)Mxc1Polarity-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)Mxc1Polarity-RB") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc1, PROP=Polarity")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
}

record(ao, "$(P)Mxc1Frequency-SP") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):Mxc1, PROP=Frequency")
  field(EGU , "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(DRVH, "62500000")
  field(DRVL, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc1Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)Mxc1Frequency-RB") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):Mxc1, PROP=Frequency")
  field(EGU,  "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc1Prescaler-RB")
}

record(longout, "$(P)Mxc1Prescaler-SP") {
  field(DESC, "EVG Mux Prescaler")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):Mxc1, PROP=Prescaler")
  field(PINI, "YES")
  field(VAL,  "124920")
  field(UDF,  "0")
  field(EGU, "Evt Clk Tick")
  field(FLNK, "$(P)Mxc1Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin , "$(P)Mxc1Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):Mxc1, PROP=Prescaler")
  field(DESC, "EVG Mux Prescaler RB")
  field(FLNK, "$(P)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)Mxc1EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)Mxc1Frequency-RB")
}

record(waveform, "$(P)Mxc1Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)Mxc2Status-RB") {
  field(DESC, "EVG Mux Output Status")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc2, PROP=Status")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)Mxc2Polarity-Sel") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):Mxc2, PROP=Polarity")
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
  field(FLNK, "$(P)Mxc2Polarity-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)Mxc2Polarity-RB") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc2, PROP=Polarity")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
}

record(ao, "$(P)Mxc2Frequency-SP") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):Mxc2, PROP=Frequency")
  field(EGU , "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(DRVH, "62500000")
  field(DRVL, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc2Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)Mxc2Frequency-RB") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):Mxc2, PROP=Frequency")
  field(EGU,  "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc2Prescaler-RB")
}

record(longout, "$(P)Mxc2Prescaler-SP") {
  field(DESC, "EVG Mux Prescaler")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):Mxc2, PROP=Prescaler")
  field(PINI, "YES")
  field(VAL,  "124920")
  field(UDF,  "0")
  field(EGU, "Evt Clk Tick")
  field(FLNK, "$(P)Mxc2Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin , "$(P)Mxc2Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):Mxc2, PROP=Prescaler")
  field(DESC, "EVG Mux Prescaler RB")
  field(FLNK, "$(P)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)Mxc2EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)Mxc2Frequency-RB")
}

record(waveform, "$(P)Mxc2Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)Mxc3Status-RB") {
  field(DESC, "EVG Mux Output Status")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc3, PROP=Status")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)Mxc3Polarity-Sel") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):Mxc3, PROP=Polarity")
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
  field(FLNK, "$(P)Mxc3Polarity-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)Mxc3Polarity-RB") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc3, PROP=Polarity")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
}

record(ao, "$(P)Mxc3Frequency-SP") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):Mxc3, PROP=Frequency")
  field(EGU , "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(DRVH, "62500000")
  field(DRVL, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc3Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)Mxc3Frequency-RB") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):Mxc3, PROP=Frequency")
  field(EGU,  "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc3Prescaler-RB")
}

record(longout, "$(P)Mxc3Prescaler-SP") {
  field(DESC, "EVG Mux Prescaler")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):Mxc3, PROP=Prescaler")
  field(PINI, "YES")
  field(VAL,  "124920")
  field(UDF,  "0")
  field(EGU, "Evt Clk Tick")
  field(FLNK, "$(P)Mxc3Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin , "$(P)Mxc3Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):Mxc3, PROP=Prescaler")
  field(DESC, "EVG Mux Prescaler RB")
  field(FLNK, "$(P)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)Mxc3EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)Mxc3Frequency-RB")
}

record(waveform, "$(P)Mxc3Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)Mxc4Status-RB") {
  field(DESC, "EVG Mux Output Status")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc4, PROP=Status")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)Mxc4Polarity-Sel") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):Mxc4, PROP=Polarity")
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
  field(FLNK, "$(P)Mxc4Polarity-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)Mxc4Polarity-RB") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc4, PROP=Polarity")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
}

record(ao, "$(P)Mxc4Frequency-SP") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):Mxc4, PROP=Frequency")
  field(EGU , "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(DRVH, "62500000")
  field(DRVL, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc4Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)Mxc4Frequency-RB") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):Mxc4, PROP=Frequency")
  field(EGU,  "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc4Prescaler-RB")
}

record(longout, "$(P)Mxc4Prescaler-SP") {
  field(DESC, "EVG Mux Prescaler")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):Mxc4, PROP=Prescaler")
  field(PINI, "YES")
  field(VAL,  "124920")
  field(UDF,  "0")
  field(EGU, "Evt Clk Tick")
  field(FLNK, "$(P)Mxc4Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin , "$(P)Mxc4Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):Mxc4, PROP=Prescaler")
  field(DESC, "EVG Mux Prescaler RB")
  field(FLNK, "$(P)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)Mxc4EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)Mxc4Frequency-RB")
}

record(waveform, "$(P)Mxc4Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)Mxc5Status-RB") {
  field(DESC, "EVG Mux Output Status")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc5, PROP=Status")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)Mxc5Polarity-Sel") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):Mxc5, PROP=Polarity")
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
  field(FLNK, "$(P)Mxc5Polarity-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)Mxc5Polarity-RB") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc5, PROP=Polarity")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
}

record(ao, "$(P)Mxc5Frequency-SP") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):Mxc5, PROP=Frequency")
  field(EGU , "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(DRVH, "62500000")
  field(DRVL, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc5Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)Mxc5Frequency-RB") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):Mxc5, PROP=Frequency")
  field(EGU,  "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc5Prescaler-RB")
}

record(longout, "$(P)Mxc5Prescaler-SP") {
  field(DESC, "EVG Mux Prescaler")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):Mxc5, PROP=Prescaler")
  field(PINI, "YES")
  field(VAL,  "124920")
  field(UDF,  "0")
  field(EGU, "Evt Clk Tick")
  field(FLNK, "$(P)Mxc5Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin , "$(P)Mxc5Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):Mxc5, PROP=Prescaler")
  field(DESC, "EVG Mux Prescaler RB")
  field(FLNK, "$(P)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)Mxc5EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)Mxc5Frequency-RB")
}

record(waveform, "$(P)Mxc5Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)Mxc6Status-RB") {
  field(DESC, "EVG Mux Output Status")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc6, PROP=Status")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)Mxc6Polarity-Sel") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):Mxc6, PROP=Polarity")
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
  field(FLNK, "$(P)Mxc6Polarity-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)Mxc6Polarity-RB") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc6, PROP=Polarity")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
}

record(ao, "$(P)Mxc6Frequency-SP") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):Mxc6, PROP=Frequency")
  field(EGU , "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(DRVH, "62500000")
  field(DRVL, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc6Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)Mxc6Frequency-RB") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):Mxc6, PROP=Frequency")
  field(EGU,  "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc6Prescaler-RB")
}

record(longout, "$(P)Mxc6Prescaler-SP") {
  field(DESC, "EVG Mux Prescaler")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):Mxc6, PROP=Prescaler")
  field(PINI, "YES")
  field(VAL,  "124920")
  field(UDF,  "0")
  field(EGU, "Evt Clk Tick")
  field(FLNK, "$(P)Mxc6Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin , "$(P)Mxc6Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):Mxc6, PROP=Prescaler")
  field(DESC, "EVG Mux Prescaler RB")
  field(FLNK, "$(P)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)Mxc6EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)Mxc6Frequency-RB")
}

record(waveform, "$(P)Mxc6Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(bi, "$(P)Mxc7Status-RB") {
  field(DESC, "EVG Mux Output Status")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc7, PROP=Status")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)Mxc7Polarity-Sel") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):Mxc7, PROP=Polarity")
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
  field(FLNK, "$(P)Mxc7Polarity-RB")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)Mxc7Polarity-RB") {
  field(DESC, "EVG Mux Output Polarity")
  field(DTYP, "Obj Prop bool")
  field(INP , "@OBJ=$(EVG):Mxc7, PROP=Polarity")
  field(ZNAM, "Orginal")
  field(ONAM, "Inverted")
}

record(ao, "$(P)Mxc7Frequency-SP") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(OUT , "@OBJ=$(EVG):Mxc7, PROP=Frequency")
  field(EGU , "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(DRVH, "62500000")
  field(DRVL, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc7Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(ai, "$(P)Mxc7Frequency-RB") {
  field(DESC, "EVG Mux Frequency")
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):Mxc7, PROP=Frequency")
  field(EGU,  "Hz")
  field(HOPR, "62500000")
  field(LOPR, "0.029")
  field(PREC, "3")
  field(FLNK, "$(P)Mxc7Prescaler-RB")
}

record(longout, "$(P)Mxc7Prescaler-SP") {
  field(DESC, "EVG Mux Prescaler")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):Mxc7, PROP=Prescaler")
  field(PINI, "YES")
  field(VAL,  "124920")
  field(UDF,  "0")
  field(EGU, "Evt Clk Tick")
  field(FLNK, "$(P)Mxc7Frequency-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin , "$(P)Mxc7Prescaler-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):Mxc7, PROP=Prescaler")
  field(DESC, "EVG Mux Prescaler RB")
  field(FLNK, "$(P)ResetMxc-Cmd")
}

#
# When Evt Clock Frequency changes, Mxc Freq changes keeping the Prescaler same.
#
record(ai, "$(P)Mxc7EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)Mxc7Frequency-RB")
}

record(waveform, "$(P)Mxc7Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
record(mbbo, "$(P)OutFront0Source-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):FrontOut0, PROP=Source")
  field(ZRST, "Off")
  field(ONST, "Dbus0")
  field(TWST, "Dbus1")
  field(THST, "Dbus2")
  field(FRST, "Dbus3")
  field(FVST, "Dbus4")
  field(SXST, "Dbus5")
  field(SVST, "Dbus6")
  field(EIST, "Dbus7")
  field(NIST, "High")
  field(TEST, "Low")
  field(ZRVL, "0")
  field(ONVL, "32")
  field(TWVL, "33")
  field(THVL, "34")
  field(FRVL, "35")
  field(FVVL, "36")
  field(SXVL, "37")
  field(SVVL, "38")
  field(EIVL, "39")
  field(NIVL, "62")
  field(TEVL, "63")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(PINI, "YES")
  field(UDF,  "0")
  field(VAL,  "0")
  field(FLNK, "$(P)OutFront0Source-RB")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)OutFront0Source-RB") {
  field(DTYP, "Obj Prop uint16")
  field(INP , "@OBJ=$(EVG):FrontOut0, PROP=Source")
  field(ZRST, "Off")
  field(ONST, "Dbus0")
  field(TWST, "Dbus1")
  field(THST, "Dbus2")
  field(FRST, "Dbus3")
  field(FVST, "Dbus4")
  field(SXST, "Dbus5")
  field(SVST, "Dbus6")
  field(EIST, "Dbus7")
  field(NIST, "High")
  field(TEST, "Low")
  field(ZRVL, "0")
  field(ONVL, "32")
  field(TWVL, "33")
  field(THVL, "34")
  field(FRVL, "35")
  field(FVVL, "36")
  field(SXVL, "37")
  field(SVVL, "38")
  field(EIVL, "39")
  field(NIVL, "62")
  field(TEVL, "63")
}
record(mbbo, "$(P)OutFront1Source-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):FrontOut1, PROP=Source")
  field(ZRST, "Off")
  field(ONST, "Dbus0")
  field(TWST, "Dbus1")
  field(THST, "Dbus2")
  field(FRST, "Dbus3")
  field(FVST, "Dbus4")
  field(SXST, "Dbus5")
  field(SVST, "Dbus6")
  field(EIST, "Dbus7")
  field(NIST, "High")
  field(TEST, "Low")
  field(ZRVL, "0")
  field(ONVL, "32")
  field(TWVL, "33")
  field(THVL, "34")
  field(FRVL, "35")
  field(FVVL, "36")
  field(SXVL, "37")
  field(SVVL, "38")
  field(EIVL, "39")
  field(NIVL, "62")
  field(TEVL, "63")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(PINI, "YES")
  field(UDF,  "0")
  field(VAL,  "0")
  field(FLNK, "$(P)OutFront1Source-RB")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)OutFront1Source-RB") {
  field(DTYP, "Obj Prop uint16")
  field(INP , "@OBJ=$(EVG):FrontOut1, PROP=Source")
  field(ZRST, "Off")
  field(ONST, "Dbus0")
  field(TWST, "Dbus1")
  field(THST, "Dbus2")
  field(FRST, "Dbus3")
  field(FVST, "Dbus4")
  field(SXST, "Dbus5")
  field(SVST, "Dbus6")
  field(EIST, "Dbus7")
  field(NIST, "High")
  field(TEST, "Low")
  field(ZRVL, "0")
  field(ONVL, "32")
  field(TWVL, "33")
  field(THVL, "34")
  field(FRVL, "35")
  field(FVVL, "36")
  field(SXVL, "37")
  field(SVVL, "38")
  field(EIVL, "39")
  field(NIVL, "62")
  field(TEVL, "63")
}
record(mbbo, "$(P)OutFront2Source-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):FrontOut2, PROP=Source")
  field(ZRST, "Off")
  field(ONST, "Dbus0")
  field(TWST, "Dbus1")
  field(THST, "Dbus2")
  field(FRST, "Dbus3")
  field(FVST, "Dbus4")
  field(SXST, "Dbus5")
  field(SVST, "Dbus6")
  field(EIST, "Dbus7")
  field(NIST, "High")
  field(TEST, "Low")
  field(ZRVL, "0")
  field(ONVL, "32")
  field(TWVL, "33")
  field(THVL, "34")
  field(FRVL, "35")
  field(FVVL, "36")
  field(SXVL, "37")
  field(SVVL, "38")
  field(EIVL, "39")
  field(NIVL, "62")
  field(TEVL, "63")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(PINI, "YES")
  field(UDF,  "0")
  field(VAL,  "0")
  field(FLNK, "$(P)OutFront2Source-RB")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)OutFront2Source-RB") {
  field(DTYP, "Obj Prop uint16")
  field(INP , "@OBJ=$(EVG):FrontOut2, PROP=Source")
  field(ZRST, "Off")
  field(ONST, "Dbus0")
  field(TWST, "Dbus1")
  field(THST, "Dbus2")
  field(FRST, "Dbus3")
  field(FVST, "Dbus4")
  field(SXST, "Dbus5")
  field(SVST, "Dbus6")
  field(EIST, "Dbus7")
  field(NIST, "High")
  field(TEST, "Low")
  field(ZRVL, "0")
  field(ONVL, "32")
  field(TWVL, "33")
  field(THVL, "34")
  field(FRVL, "35")
  field(FVVL, "36")
  field(SXVL, "37")
  field(SVVL, "38")
  field(EIVL, "39")
  field(NIVL, "62")
  field(TEVL, "63")
}
record(mbbo, "$(P)OutFront3Source-Sel") {
  field(DTYP, "Obj Prop uint16")
  field(OUT , "@OBJ=$(EVG):FrontOut3, PROP=Source")
  field(ZRST, "Off")
  field(ONST, "Dbus0")
  field(TWST, "Dbus1")
  field(THST, "Dbus2")
  field(FRST, "Dbus3")
  field(FVST, "Dbus4")
  field(SXST, "Dbus5")
  field(SVST, "Dbus6")
  field(EIST, "Dbus7")
  field(NIST, "High")
  field(TEST, "Low")
  field(ZRVL, "0")
  field(ONVL, "32")
  field(TWVL, "33")
  field(THVL, "34")
  field(FRVL, "35")
  field(FVVL, "36")
  field(SXVL, "37")
  field(SVVL, "38")
  field(EIVL, "39")
  field(NIVL, "62")
  field(TEVL, "63")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(PINI, "YES")
  field(UDF,  "0")
  field(VAL,  "0")
  field(FLNK, "$(P)OutFront3Source-RB")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)OutFront3Source-RB") {
  field(DTYP, "Obj Prop uint16")
  field(INP , "@OBJ=$(EVG):FrontOut3, PROP=Source")
  field(ZRST, "Off")
  field(ONST, "Dbus0")
  field(TWST, "Dbus1")
  field(THST, "Dbus2")
  field(FRST, "Dbus3")
  field(FVST, "Dbus4")
  field(SXST, "Dbus5")
  field(SVST, "Dbus6")
  field(EIST, "Dbus7")
  field(NIST, "High")
  field(TEST, "Low")
  field(ZRVL, "0")
  field(ONVL, "32")
  field(TWVL, "33")
  field(THVL, "34")
  field(FRVL, "35")
  field(FVVL, "36")
  field(SXVL, "37")
  field(SVVL, "38")
  field(EIVL, "39")
  field(NIVL, "62")
  field(TEVL, "63")
}
# Macros
#  P
#  EVG
#  seqNum
#
# Device indpendent parts of sequencer (excludes trigger source mapping)

record(mbbo, "$(P)SoftSeq0TsResolution-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
  field(ZRST, "Ticks")
  field(ONST, "Sec")
  field(TWST, "uSec")
  field(THST, "nSec")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1000000")
  field(THVL, "1000000000")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)SoftSeq0TsResolution-RB")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)SoftSeq0TsResolution-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
  field(ZRST, "Ticks")
  field(ONST, "Sec")
  field(TWST, "uSec")
  field(THST, "nSec")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1000000")
  field(THVL, "1000000000")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
}

record(waveform, "$(P)SoftSeq0EvtEna-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence event enable array")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENA")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq0EvtEna-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence event enable readback")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENA")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
}

record(waveform, "$(P)SoftSeq0EvtMask-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence event mask array")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=MASK")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq0EvtMask-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence event mask readback")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=MASK")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
}

record(waveform, "$(P)SoftSeq0EvtCode-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence event code array")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq0EvtCode-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence event code readback")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
}

record(waveform, "$(P)SoftSeq0Timestamp-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence timestamp array")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
  field(NELM, "2047")
  field(FTVL, "DOUBLE")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq0Timestamp-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence timestamp readback")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "DOUBLE")
}

record(mbbo, "$(P)SoftSeq0RunMode-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
  field(UDF,  "0")
  field(VAL,  "1") # default to Single
  field(ZRVL, "0")
  field(ONVL, "2")
  field(ZRST, "Normal")
  field(ONST, "Single")
  field(TWSV, "INVALID")
  field(THSV, "INVALID")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)SoftSeq0RunMode-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
  field(SCAN, "I/O Intr")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "Normal")
  field(ONST, "Automatic")
  field(TWST, "Single")
  field(THSV, "INVALID")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
}

record(bo, "$(P)SoftSeq0Commit-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Commit EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMIT")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Commit")
  field(ONAM, "Commit")
}

record(bo, "$(P)SoftSeq0Load-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "ALLOC EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOAD")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)SoftSeq0Unload-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Dealloc EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=UNLOAD")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)SoftSeq0Enable-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Enable EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLE")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(FLNK, "$(P)SoftSeq0Enable-RB")
  field(ASG , "")
}

record(bo, "$(P)SoftSeq0Disable-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Disable EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=DISABLE")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(ASG , "")
}

record(bo, "$(P)SoftSeq0SoftTrig-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Sequence RAM soft trigger")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SOFT_TRIG")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(mbbo, "$(P)SoftSeq0SwMask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(NOBT, "4")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWMASK")
}

record(mbbi, "$(P)SoftSeq0SwMask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWMASK")
  field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)SoftSeq0SwEna-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(NOBT, "4")
  field(OUT,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWENA")
}

record(mbbi, "$(P)SoftSeq0SwEna-RB") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWENA")
  field(SCAN, "I/O Intr")
}

record(bi, "$(P)SoftSeq0Load-RB") {
  field(DTYP, "Obj Prop bool")
  field(DESC, "Soft Seq Load status")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOADED")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Unloaded")
  field(ONAM, "Loaded")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)SoftSeq0Commit-RB") {
  field(DTYP, "Obj Prop bool")
  field(DESC, "Soft Seq Commit status")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMITTED")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Uncommitted")
  field(ONAM, "Committed")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)SoftSeq0Enable-Sts") {
  field(DTYP, "Obj Prop bool")
  field(DESC, "Soft Seq Ena status")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLED")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(FLNK, "")
  info(autosaveFields_pass0, "VAL")
    alias("$(P)SoftSeq0Enable-RB")
}

record(stringin, "$(P)SoftSeq0Error-RB") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Sequence error msg.")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ERROR")
  field(SCAN, "I/O Intr")
}

record(longin, "$(P)SoftSeq0NumOfStarts-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "# times soft sequence starts")
  field(INP , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_STARTS")
  field(SCAN, "I/O Intr") # on sequencer start
  field(FLNK, "")
}

record(longin, "$(P)SoftSeq0NumOfRuns-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "# times soft sequence ran")
  field(INP,  "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_RUNS")
  field(SCAN, "I/O Intr") # on sequencer stop
}

#
#Process Load-Cmd record if the sequence  was perviously in LOADED state
#

record(calcout, "$(P)SoftSeq0Load-Calc_") {
  field(ASG, "private")
  field(CALC, "A")
  field(INPA, "$(P)SoftSeq0Load-RB NPP NMS")
  field(OOPT, "When Non-zero")
  field(OUT,  "$(P)SoftSeq0Load-Cmd PP")
}

#
#Process Commit-Cmd record if the sequence was perviously in COMMITTED state
#

record(calcout, "$(P)SoftSeq0Commit-Calc_") {
  field(ASG, "private")
  field(CALC, "A")
  field(INPA, "$(P)SoftSeq0Commit-RB NPP NMS")
  field(OOPT, "When Non-zero")
  field(OUT,  "$(P)SoftSeq0Commit-Cmd PP")
}

#
#Process Enable-Cmd record if the sequence was perviously in ENABLED state
#

record(calcout, "$(P)SoftSeq0Enable-Calc_") {
  field(ASG, "private")
  field(CALC, "A")
  field(INPA, "$(P)SoftSeq0Enable-RB NPP NMS")
  field(OOPT, "When Non-zero")
  field(OUT,  "$(P)SoftSeq0Enable-Cmd PP")
}

record(fanout, "$(P)SoftSeq0InitSeq-FOut_") {
  field(ASG, "private")
  field(DESC, "Boot of sequence for sequencer")
  field(SELM, "All")
  field(PINI, "RUNNING")
  field(LNK1, "")
  field(LNK2, "$(P)SoftSeq0TsResolution-Sel")
  field(LNK3, "$(P)SoftSeq0EvtCode-SP")
  field(LNK4, "$(P)SoftSeq0Timestamp-SP")
  field(LNK5, "$(P)SoftSeq0RunMode-Sel")
  field(LNK6, "$(P)SoftSeq0InitSeqCont-FOut_")
}

record(fanout, "$(P)SoftSeq0InitSeqCont-FOut_") {
  field(ASG, "private")
  field(DESC, "Boot of sequence for sequencer")
  field(SELM, "All")
  field(LNK1, "$(P)SoftSeq0TrigSrcInit-FOut_")
  field(LNK2, "$(P)SoftSeq0Commit-Calc_")
  field(LNK3, "$(P)SoftSeq0Load-Calc_")
  field(LNK4, "$(P)SoftSeq0Enable-Calc_")
}

record(waveform, "$(P)SoftSeq0Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Macros
#  P
#  EVG
#  seqNum
#
# Device indpendent parts of sequencer (excludes trigger source mapping)

record(mbbo, "$(P)SoftSeq1TsResolution-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
  field(ZRST, "Ticks")
  field(ONST, "Sec")
  field(TWST, "uSec")
  field(THST, "nSec")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1000000")
  field(THVL, "1000000000")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)SoftSeq1TsResolution-RB")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)SoftSeq1TsResolution-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
  field(ZRST, "Ticks")
  field(ONST, "Sec")
  field(TWST, "uSec")
  field(THST, "nSec")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1000000")
  field(THVL, "1000000000")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
}

record(waveform, "$(P)SoftSeq1EvtEna-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence event enable array")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENA")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq1EvtEna-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence event enable readback")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENA")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
}

record(waveform, "$(P)SoftSeq1EvtMask-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence event mask array")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=MASK")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq1EvtMask-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence event mask readback")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=MASK")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
}

record(waveform, "$(P)SoftSeq1EvtCode-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence event code array")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq1EvtCode-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence event code readback")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
}

record(waveform, "$(P)SoftSeq1Timestamp-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence timestamp array")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
  field(NELM, "2047")
  field(FTVL, "DOUBLE")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq1Timestamp-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence timestamp readback")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "DOUBLE")
}

record(mbbo, "$(P)SoftSeq1RunMode-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
  field(UDF,  "0")
  field(VAL,  "1") # default to Single
  field(ZRVL, "0")
  field(ONVL, "2")
  field(ZRST, "Normal")
  field(ONST, "Single")
  field(TWSV, "INVALID")
  field(THSV, "INVALID")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)SoftSeq1RunMode-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
  field(SCAN, "I/O Intr")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "Normal")
  field(ONST, "Automatic")
  field(TWST, "Single")
  field(THSV, "INVALID")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
}

record(bo, "$(P)SoftSeq1Commit-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Commit EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMIT")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Commit")
  field(ONAM, "Commit")
}

record(bo, "$(P)SoftSeq1Load-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "ALLOC EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOAD")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)SoftSeq1Unload-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Dealloc EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=UNLOAD")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)SoftSeq1Enable-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Enable EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLE")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(FLNK, "$(P)SoftSeq1Enable-RB")
  field(ASG , "")
}

record(bo, "$(P)SoftSeq1Disable-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Disable EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=DISABLE")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(ASG , "")
}

record(bo, "$(P)SoftSeq1SoftTrig-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Sequence RAM soft trigger")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SOFT_TRIG")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(mbbo, "$(P)SoftSeq1SwMask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(NOBT, "4")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWMASK")
}

record(mbbi, "$(P)SoftSeq1SwMask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWMASK")
  field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)SoftSeq1SwEna-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(NOBT, "4")
  field(OUT,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWENA")
}

record(mbbi, "$(P)SoftSeq1SwEna-RB") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWENA")
  field(SCAN, "I/O Intr")
}

record(bi, "$(P)SoftSeq1Load-RB") {
  field(DTYP, "Obj Prop bool")
  field(DESC, "Soft Seq Load status")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOADED")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Unloaded")
  field(ONAM, "Loaded")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)SoftSeq1Commit-RB") {
  field(DTYP, "Obj Prop bool")
  field(DESC, "Soft Seq Commit status")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMITTED")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Uncommitted")
  field(ONAM, "Committed")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)SoftSeq1Enable-Sts") {
  field(DTYP, "Obj Prop bool")
  field(DESC, "Soft Seq Ena status")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLED")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(FLNK, "")
  info(autosaveFields_pass0, "VAL")
    alias("$(P)SoftSeq1Enable-RB")
}

record(stringin, "$(P)SoftSeq1Error-RB") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Sequence error msg.")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ERROR")
  field(SCAN, "I/O Intr")
}

record(longin, "$(P)SoftSeq1NumOfStarts-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "# times soft sequence starts")
  field(INP , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_STARTS")
  field(SCAN, "I/O Intr") # on sequencer start
  field(FLNK, "")
}

record(longin, "$(P)SoftSeq1NumOfRuns-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "# times soft sequence ran")
  field(INP,  "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_RUNS")
  field(SCAN, "I/O Intr") # on sequencer stop
}

#
#Process Load-Cmd record if the sequence  was perviously in LOADED state
#

record(calcout, "$(P)SoftSeq1Load-Calc_") {
  field(ASG, "private")
  field(CALC, "A")
  field(INPA, "$(P)SoftSeq1Load-RB NPP NMS")
  field(OOPT, "When Non-zero")
  field(OUT,  "$(P)SoftSeq1Load-Cmd PP")
}

#
#Process Commit-Cmd record if the sequence was perviously in COMMITTED state
#

record(calcout, "$(P)SoftSeq1Commit-Calc_") {
  field(ASG, "private")
  field(CALC, "A")
  field(INPA, "$(P)SoftSeq1Commit-RB NPP NMS")
  field(OOPT, "When Non-zero")
  field(OUT,  "$(P)SoftSeq1Commit-Cmd PP")
}

#
#Process Enable-Cmd record if the sequence was perviously in ENABLED state
#

record(calcout, "$(P)SoftSeq1Enable-Calc_") {
  field(ASG, "private")
  field(CALC, "A")
  field(INPA, "$(P)SoftSeq1Enable-RB NPP NMS")
  field(OOPT, "When Non-zero")
  field(OUT,  "$(P)SoftSeq1Enable-Cmd PP")
}

record(fanout, "$(P)SoftSeq1InitSeq-FOut_") {
  field(ASG, "private")
  field(DESC, "Boot of sequence for sequencer")
  field(SELM, "All")
  field(PINI, "RUNNING")
  field(LNK1, "")
  field(LNK2, "$(P)SoftSeq1TsResolution-Sel")
  field(LNK3, "$(P)SoftSeq1EvtCode-SP")
  field(LNK4, "$(P)SoftSeq1Timestamp-SP")
  field(LNK5, "$(P)SoftSeq1RunMode-Sel")
  field(LNK6, "$(P)SoftSeq1InitSeqCont-FOut_")
}

record(fanout, "$(P)SoftSeq1InitSeqCont-FOut_") {
  field(ASG, "private")
  field(DESC, "Boot of sequence for sequencer")
  field(SELM, "All")
  field(LNK1, "$(P)SoftSeq1TrigSrcInit-FOut_")
  field(LNK2, "$(P)SoftSeq1Commit-Calc_")
  field(LNK3, "$(P)SoftSeq1Load-Calc_")
  field(LNK4, "$(P)SoftSeq1Enable-Calc_")
}

record(waveform, "$(P)SoftSeq1Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# Macros
#  P
#  EVG
#  seqNum
#
# Device indpendent parts of sequencer (excludes trigger source mapping)

record(mbbo, "$(P)SoftSeq2TsResolution-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
  field(ZRST, "Ticks")
  field(ONST, "Sec")
  field(TWST, "uSec")
  field(THST, "nSec")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1000000")
  field(THVL, "1000000000")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)SoftSeq2TsResolution-RB")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)SoftSeq2TsResolution-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMEUNITS")
  field(ZRST, "Ticks")
  field(ONST, "Sec")
  field(TWST, "uSec")
  field(THST, "nSec")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "1000000")
  field(THVL, "1000000000")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
}

record(waveform, "$(P)SoftSeq2EvtEna-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence event enable array")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENA")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq2EvtEna-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence event enable readback")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENA")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
}

record(waveform, "$(P)SoftSeq2EvtMask-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence event mask array")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=MASK")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq2EvtMask-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence event mask readback")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=MASK")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
}

record(waveform, "$(P)SoftSeq2EvtCode-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence event code array")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq2EvtCode-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence event code readback")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=CODES")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "UCHAR")
}

record(waveform, "$(P)SoftSeq2Timestamp-SP") {
  field(DTYP, "Obj Prop waveform out")
  field(DESC, "Sequence timestamp array")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
  field(NELM, "2047")
  field(FTVL, "DOUBLE")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)SoftSeq2Timestamp-RB") {
  field(DTYP, "Obj Prop waveform in")
  field(DESC, "Sequence timestamp readback")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TIMES")
  field(SCAN, "I/O Intr")
  field(NELM, "2047")
  field(FTVL, "DOUBLE")
}

record(mbbo, "$(P)SoftSeq2RunMode-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
  field(UDF,  "0")
  field(VAL,  "1") # default to Single
  field(ZRVL, "0")
  field(ONVL, "2")
  field(ZRST, "Normal")
  field(ONST, "Single")
  field(TWSV, "INVALID")
  field(THSV, "INVALID")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  info(autosaveFields_pass0, "VAL")
}

record(mbbi, "$(P)SoftSeq2RunMode-RB") {
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=RUN_MODE")
  field(SCAN, "I/O Intr")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(ZRST, "Normal")
  field(ONST, "Automatic")
  field(TWST, "Single")
  field(THSV, "INVALID")
  field(FRSV, "INVALID")
  field(FVSV, "INVALID")
  field(SXSV, "INVALID")
  field(SVSV, "INVALID")
  field(EISV, "INVALID")
  field(NISV, "INVALID")
  field(TESV, "INVALID")
  field(ELSV, "INVALID")
  field(TVSV, "INVALID")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
}

record(bo, "$(P)SoftSeq2Commit-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Commit EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMIT")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "Commit")
  field(ONAM, "Commit")
}

record(bo, "$(P)SoftSeq2Load-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "ALLOC EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOAD")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)SoftSeq2Unload-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Dealloc EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=UNLOAD")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(bo, "$(P)SoftSeq2Enable-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Enable EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLE")
  field(VAL,  "1")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(FLNK, "$(P)SoftSeq2Enable-RB")
  field(ASG , "")
}

record(bo, "$(P)SoftSeq2Disable-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Disable EVG Sequence")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=DISABLE")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(ASG , "")
}

record(bo, "$(P)SoftSeq2SoftTrig-Cmd") {
  field(DTYP, "Obj Prop command")
  field(DESC, "Sequence RAM soft trigger")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SOFT_TRIG")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZNAM, "0")
  field(ONAM, "1")
}

record(mbbo, "$(P)SoftSeq2SwMask-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(NOBT, "4")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWMASK")
}

record(mbbi, "$(P)SoftSeq2SwMask-RB") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWMASK")
  field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)SoftSeq2SwEna-Sel") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(NOBT, "4")
  field(OUT,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWENA")
}

record(mbbi, "$(P)SoftSeq2SwEna-RB") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "Sequence RAM soft trigger")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=SWENA")
  field(SCAN, "I/O Intr")
}

record(bi, "$(P)SoftSeq2Load-RB") {
  field(DTYP, "Obj Prop bool")
  field(DESC, "Soft Seq Load status")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=LOADED")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Unloaded")
  field(ONAM, "Loaded")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)SoftSeq2Commit-RB") {
  field(DTYP, "Obj Prop bool")
  field(DESC, "Soft Seq Commit status")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=COMMITTED")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Uncommitted")
  field(ONAM, "Committed")
  info(autosaveFields_pass0, "VAL")
}

record(bi, "$(P)SoftSeq2Enable-Sts") {
  field(DTYP, "Obj Prop bool")
  field(DESC, "Soft Seq Ena status")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ENABLED")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
  field(FLNK, "")
  info(autosaveFields_pass0, "VAL")
    alias("$(P)SoftSeq2Enable-RB")
}

record(stringin, "$(P)SoftSeq2Error-RB") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Sequence error msg.")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=ERROR")
  field(SCAN, "I/O Intr")
}

record(longin, "$(P)SoftSeq2NumOfStarts-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "# times soft sequence starts")
  field(INP , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_STARTS")
  field(SCAN, "I/O Intr") # on sequencer start
  field(FLNK, "")
}

record(longin, "$(P)SoftSeq2NumOfRuns-I") {
  field(DTYP, "Obj Prop uint32")
  field(DESC, "# times soft sequence ran")
  field(INP,  "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=NUM_RUNS")
  field(SCAN, "I/O Intr") # on sequencer stop
}

#
#Process Load-Cmd record if the sequence  was perviously in LOADED state
#

record(calcout, "$(P)SoftSeq2Load-Calc_") {
  field(ASG, "private")
  field(CALC, "A")
  field(INPA, "$(P)SoftSeq2Load-RB NPP NMS")
  field(OOPT, "When Non-zero")
  field(OUT,  "$(P)SoftSeq2Load-Cmd PP")
}

#
#Process Commit-Cmd record if the sequence was perviously in COMMITTED state
#

record(calcout, "$(P)SoftSeq2Commit-Calc_") {
  field(ASG, "private")
  field(CALC, "A")
  field(INPA, "$(P)SoftSeq2Commit-RB NPP NMS")
  field(OOPT, "When Non-zero")
  field(OUT,  "$(P)SoftSeq2Commit-Cmd PP")
}

#
#Process Enable-Cmd record if the sequence was perviously in ENABLED state
#

record(calcout, "$(P)SoftSeq2Enable-Calc_") {
  field(ASG, "private")
  field(CALC, "A")
  field(INPA, "$(P)SoftSeq2Enable-RB NPP NMS")
  field(OOPT, "When Non-zero")
  field(OUT,  "$(P)SoftSeq2Enable-Cmd PP")
}

record(fanout, "$(P)SoftSeq2InitSeq-FOut_") {
  field(ASG, "private")
  field(DESC, "Boot of sequence for sequencer")
  field(SELM, "All")
  field(PINI, "RUNNING")
  field(LNK1, "")
  field(LNK2, "$(P)SoftSeq2TsResolution-Sel")
  field(LNK3, "$(P)SoftSeq2EvtCode-SP")
  field(LNK4, "$(P)SoftSeq2Timestamp-SP")
  field(LNK5, "$(P)SoftSeq2RunMode-Sel")
  field(LNK6, "$(P)SoftSeq2InitSeqCont-FOut_")
}

record(fanout, "$(P)SoftSeq2InitSeqCont-FOut_") {
  field(ASG, "private")
  field(DESC, "Boot of sequence for sequencer")
  field(SELM, "All")
  field(LNK1, "$(P)SoftSeq2TrigSrcInit-FOut_")
  field(LNK2, "$(P)SoftSeq2Commit-Calc_")
  field(LNK3, "$(P)SoftSeq2Load-Calc_")
  field(LNK4, "$(P)SoftSeq2Enable-Calc_")
}

record(waveform, "$(P)SoftSeq2Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}
# linked from mrmSoftSeq.template
# $(P)SoftSeq0InitSeqCont-FOut_
record(fanout, "$(P)SoftSeq0TrigSrcInit-FOut_") {
  field(ASG, "private")
  field(LNK1, "$(P)SoftSeq0TrigSrc-Sel_")
}

record(mbbo, "$(P)SoftSeq0TrigSrc-Sel") {
  field(DTYP, "Raw Soft Channel")
  field(OUT , "$(P)SoftSeq0TrigSrc-Sel_ PP")
  field(UDF,  "0")
  field(ZRST, "None")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Software")
  field(ELST, "Front0")
  field(TVST, "Front1")
  field(TTST, "Univ0")
  field(FTST, "Univ1")
  field(FFST, "Univ2")
  field(ZRVL, "0x03000000")
  field(ONVL, "0")
  field(TWVL, "1")
  field(THVL, "2")
  field(FRVL, "3")
  field(FVVL, "4")
  field(SXVL, "5")
  field(SVVL, "6")
  field(EIVL, "7")
  field(NIVL, "16")
  field(TEVL, "0x01000000")
  field(ELVL, "0x02010000")
  field(TVVL, "0x02010001")
  field(TTVL, "0x02020000")
  field(FTVL, "0x02020001")
  field(FFVL, "0x02020002")
  info(autosaveFields_pass0, "VAL")
    alias("$(P)SoftSeq0TrigSrc0-Sel")
}

record(mbbo, "$(P)SoftSeq0TrigSrc1-Sel") {
  field(DTYP, "Raw Soft Channel")
  field(OUT , "$(P)SoftSeq0TrigSrc-Sel_ PP")
  field(UDF,  "0")
  field(ZRST, "Univ3")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0x02020003")
  field(ONVL, "0x02020004")
  field(TWVL, "0x02020005")
  field(THVL, "0x02020006")
  field(FRVL, "0x02020007")
  field(FVVL, "0x02020008")
  field(SXVL, "0x02020009")
  field(SVVL, "0x0202000a")
  field(EIVL, "0x0202000b")
  field(NIVL, "0x0202000c")
  field(TEVL, "0x0202000d")
  field(ELVL, "0x0202000e")
  field(TVVL, "0x0202000f")
  info(autosaveFields_pass0, "VAL")
}

# placeholder to OPIs
record(mbbo, "$(P)SoftSeq0TrigSrc2-Sel") {
  field(DISP, "1")
}

record(longout, "$(P)SoftSeq0TrigSrc-Sel_") {
  field(ASG, "private")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
  field(VAL , "0x03000000") # default to None
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)SoftSeq0TrigSrc-RB_") {
  field(ASG, "private")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ0, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)SoftSeq0TrigSrc-RB")
}

record(stringin, "$(P)SoftSeq0TrigSrc-RB") {
  field(DTYP, "LUT uint32 -> string")
  field(INP, "$(P)SoftSeq0TrigSrc-RB_")
  info(lut0 , " 0  = Mxc0")
  info(lut1 , " 1  = Mxc1")
  info(lut2 , " 2  = Mxc2")
  info(lut3 , " 3  = Mxc3")
  info(lut4 , " 4  = Mxc4")
  info(lut5 , " 5  = Mxc5")
  info(lut6 , " 6  = Mxc6")
  info(lut7 , " 7  = Mxc7")
  info(lut8 , " 16 = AC")
  info(lut9 , " 0x01000000 = Software")
  info(luta , " 0x02010000 = Front0")
  info(lutb , " 0x02010001 = Front1")
  info(lutc , " 0x02020000 = Univ0")
  info(lutd , " 0x02020001 = Univ1")
  info(lute , " 0x02020002 = Univ2")
  info(lutf , " 0x02020003 = Univ3")
  info(lutg , " 0x02020004 = Univ4")
  info(luth , " 0x02020005 = Univ5")
  info(luti , " 0x02020006 = Univ6")
  info(lutj , " 0x02020007 = Univ7")
  info(lutk , " 0x02020008 = Univ8")
  info(lutl , " 0x02020009 = Univ9")
  info(lutm , " 0x0202000a = Univ10")
  info(lutn , " 0x0202000b = Univ11")
  info(luto , " 0x0202000c = Univ12")
  info(lutp , " 0x0202000d = Univ13")
  info(lutq , " 0x0202000e = Univ14")
  info(lutr , " 0x0202000f = Univ15")
  info(lutY , " 0x03000000 = None")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(P)SoftSeq0EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)SoftSeq0EvtClkFreqCont-RB_")
}

record(ao, "$(P)SoftSeq0EvtClkFreqCont-RB_") {
  field(ASG, "private")
  field(OUT,  "$(P)SoftSeq0Timestamp-RB.PROC")
  field(VAL,  "1")
}
# linked from mrmSoftSeq.template
# $(P)SoftSeq1InitSeqCont-FOut_
record(fanout, "$(P)SoftSeq1TrigSrcInit-FOut_") {
  field(ASG, "private")
  field(LNK1, "$(P)SoftSeq1TrigSrc-Sel_")
}

record(mbbo, "$(P)SoftSeq1TrigSrc-Sel") {
  field(DTYP, "Raw Soft Channel")
  field(OUT , "$(P)SoftSeq1TrigSrc-Sel_ PP")
  field(UDF,  "0")
  field(ZRST, "None")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Software")
  field(ELST, "Front0")
  field(TVST, "Front1")
  field(TTST, "Univ0")
  field(FTST, "Univ1")
  field(FFST, "Univ2")
  field(ZRVL, "0x03000000")
  field(ONVL, "0")
  field(TWVL, "1")
  field(THVL, "2")
  field(FRVL, "3")
  field(FVVL, "4")
  field(SXVL, "5")
  field(SVVL, "6")
  field(EIVL, "7")
  field(NIVL, "16")
  field(TEVL, "0x01000000")
  field(ELVL, "0x02010000")
  field(TVVL, "0x02010001")
  field(TTVL, "0x02020000")
  field(FTVL, "0x02020001")
  field(FFVL, "0x02020002")
  info(autosaveFields_pass0, "VAL")
    alias("$(P)SoftSeq1TrigSrc0-Sel")
}

record(mbbo, "$(P)SoftSeq1TrigSrc1-Sel") {
  field(DTYP, "Raw Soft Channel")
  field(OUT , "$(P)SoftSeq1TrigSrc-Sel_ PP")
  field(UDF,  "0")
  field(ZRST, "Univ3")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0x02020003")
  field(ONVL, "0x02020004")
  field(TWVL, "0x02020005")
  field(THVL, "0x02020006")
  field(FRVL, "0x02020007")
  field(FVVL, "0x02020008")
  field(SXVL, "0x02020009")
  field(SVVL, "0x0202000a")
  field(EIVL, "0x0202000b")
  field(NIVL, "0x0202000c")
  field(TEVL, "0x0202000d")
  field(ELVL, "0x0202000e")
  field(TVVL, "0x0202000f")
  info(autosaveFields_pass0, "VAL")
}

# placeholder to OPIs
record(mbbo, "$(P)SoftSeq1TrigSrc2-Sel") {
  field(DISP, "1")
}

record(longout, "$(P)SoftSeq1TrigSrc-Sel_") {
  field(ASG, "private")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
  field(VAL , "0x03000000") # default to None
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)SoftSeq1TrigSrc-RB_") {
  field(ASG, "private")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ1, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)SoftSeq1TrigSrc-RB")
}

record(stringin, "$(P)SoftSeq1TrigSrc-RB") {
  field(DTYP, "LUT uint32 -> string")
  field(INP, "$(P)SoftSeq1TrigSrc-RB_")
  info(lut0 , " 0  = Mxc0")
  info(lut1 , " 1  = Mxc1")
  info(lut2 , " 2  = Mxc2")
  info(lut3 , " 3  = Mxc3")
  info(lut4 , " 4  = Mxc4")
  info(lut5 , " 5  = Mxc5")
  info(lut6 , " 6  = Mxc6")
  info(lut7 , " 7  = Mxc7")
  info(lut8 , " 16 = AC")
  info(lut9 , " 0x01000000 = Software")
  info(luta , " 0x02010000 = Front0")
  info(lutb , " 0x02010001 = Front1")
  info(lutc , " 0x02020000 = Univ0")
  info(lutd , " 0x02020001 = Univ1")
  info(lute , " 0x02020002 = Univ2")
  info(lutf , " 0x02020003 = Univ3")
  info(lutg , " 0x02020004 = Univ4")
  info(luth , " 0x02020005 = Univ5")
  info(luti , " 0x02020006 = Univ6")
  info(lutj , " 0x02020007 = Univ7")
  info(lutk , " 0x02020008 = Univ8")
  info(lutl , " 0x02020009 = Univ9")
  info(lutm , " 0x0202000a = Univ10")
  info(lutn , " 0x0202000b = Univ11")
  info(luto , " 0x0202000c = Univ12")
  info(lutp , " 0x0202000d = Univ13")
  info(lutq , " 0x0202000e = Univ14")
  info(lutr , " 0x0202000f = Univ15")
  info(lutY , " 0x03000000 = None")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(P)SoftSeq1EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)SoftSeq1EvtClkFreqCont-RB_")
}

record(ao, "$(P)SoftSeq1EvtClkFreqCont-RB_") {
  field(ASG, "private")
  field(OUT,  "$(P)SoftSeq1Timestamp-RB.PROC")
  field(VAL,  "1")
}
# linked from mrmSoftSeq.template
# $(P)SoftSeq2InitSeqCont-FOut_
record(fanout, "$(P)SoftSeq2TrigSrcInit-FOut_") {
  field(ASG, "private")
  field(LNK1, "$(P)SoftSeq2TrigSrc-Sel_")
}

record(mbbo, "$(P)SoftSeq2TrigSrc-Sel") {
  field(DTYP, "Raw Soft Channel")
  field(OUT , "$(P)SoftSeq2TrigSrc-Sel_ PP")
  field(UDF,  "0")
  field(ZRST, "None")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Software")
  field(ELST, "Front0")
  field(TVST, "Front1")
  field(TTST, "Univ0")
  field(FTST, "Univ1")
  field(FFST, "Univ2")
  field(ZRVL, "0x03000000")
  field(ONVL, "0")
  field(TWVL, "1")
  field(THVL, "2")
  field(FRVL, "3")
  field(FVVL, "4")
  field(SXVL, "5")
  field(SVVL, "6")
  field(EIVL, "7")
  field(NIVL, "16")
  field(TEVL, "0x01000000")
  field(ELVL, "0x02010000")
  field(TVVL, "0x02010001")
  field(TTVL, "0x02020000")
  field(FTVL, "0x02020001")
  field(FFVL, "0x02020002")
  info(autosaveFields_pass0, "VAL")
    alias("$(P)SoftSeq2TrigSrc0-Sel")
}

record(mbbo, "$(P)SoftSeq2TrigSrc1-Sel") {
  field(DTYP, "Raw Soft Channel")
  field(OUT , "$(P)SoftSeq2TrigSrc-Sel_ PP")
  field(UDF,  "0")
  field(ZRST, "Univ3")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0x02020003")
  field(ONVL, "0x02020004")
  field(TWVL, "0x02020005")
  field(THVL, "0x02020006")
  field(FRVL, "0x02020007")
  field(FVVL, "0x02020008")
  field(SXVL, "0x02020009")
  field(SVVL, "0x0202000a")
  field(EIVL, "0x0202000b")
  field(NIVL, "0x0202000c")
  field(TEVL, "0x0202000d")
  field(ELVL, "0x0202000e")
  field(TVVL, "0x0202000f")
  info(autosaveFields_pass0, "VAL")
}

# placeholder to OPIs
record(mbbo, "$(P)SoftSeq2TrigSrc2-Sel") {
  field(DISP, "1")
}

record(longout, "$(P)SoftSeq2TrigSrc-Sel_") {
  field(ASG, "private")
  field(DTYP, "Obj Prop uint32")
  field(OUT , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
  field(VAL , "0x03000000") # default to None
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)SoftSeq2TrigSrc-RB_") {
  field(ASG, "private")
  field(DTYP, "Obj Prop uint32")
  field(INP , "@OBJ=$(EVG):SEQ2, CLASS=SeqManager, PARENT=$(EVG):SEQMGR, PROP=TRIG_SRC")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)SoftSeq2TrigSrc-RB")
}

record(stringin, "$(P)SoftSeq2TrigSrc-RB") {
  field(DTYP, "LUT uint32 -> string")
  field(INP, "$(P)SoftSeq2TrigSrc-RB_")
  info(lut0 , " 0  = Mxc0")
  info(lut1 , " 1  = Mxc1")
  info(lut2 , " 2  = Mxc2")
  info(lut3 , " 3  = Mxc3")
  info(lut4 , " 4  = Mxc4")
  info(lut5 , " 5  = Mxc5")
  info(lut6 , " 6  = Mxc6")
  info(lut7 , " 7  = Mxc7")
  info(lut8 , " 16 = AC")
  info(lut9 , " 0x01000000 = Software")
  info(luta , " 0x02010000 = Front0")
  info(lutb , " 0x02010001 = Front1")
  info(lutc , " 0x02020000 = Univ0")
  info(lutd , " 0x02020001 = Univ1")
  info(lute , " 0x02020002 = Univ2")
  info(lutf , " 0x02020003 = Univ3")
  info(lutg , " 0x02020004 = Univ4")
  info(luth , " 0x02020005 = Univ5")
  info(luti , " 0x02020006 = Univ6")
  info(lutj , " 0x02020007 = Univ7")
  info(lutk , " 0x02020008 = Univ8")
  info(lutl , " 0x02020009 = Univ9")
  info(lutm , " 0x0202000a = Univ10")
  info(lutn , " 0x0202000b = Univ11")
  info(luto , " 0x0202000c = Univ12")
  info(lutp , " 0x0202000d = Univ13")
  info(lutq , " 0x0202000e = Univ14")
  info(lutr , " 0x0202000f = Univ15")
  info(lutY , " 0x03000000 = None")
}

#
# When Evt Clock Frequency changes, Sequencer Timestamp changes
#(only if TsInpMode = EGU).
#
record(ai, "$(P)SoftSeq2EvtClkFreq-RB_") {
  field(ASG, "private")
  field(INP,  "$(P)EvtClkFrequency-RB CP")
  field(FLNK, "$(P)SoftSeq2EvtClkFreqCont-RB_")
}

record(ao, "$(P)SoftSeq2EvtClkFreqCont-RB_") {
  field(ASG, "private")
  field(OUT,  "$(P)SoftSeq2Timestamp-RB.PROC")
  field(VAL,  "1")
}

record(longout, "$(P)TrigEvt0EvtCode-SP") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):TrigEvt0, PROP=EvtCode")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)TrigEvt0EvtCode-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)TrigEvt0EvtCode-RB") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG):TrigEvt0, PROP=EvtCode")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
}

record(mbbo, "$(P)TrigEvt0TrigSrc-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Front0")
  field(ELST, "Front1")
  field(TVST, "Univ0")
  field(TTST, "Univ1")
  field(FTST, "Univ2")
  field(FFST, "Univ3")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt0TrigSrc-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt0TrigSrc-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt0TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)TrigEvt0TrigSrc1-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt0TrigSrc1-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt0TrigSrc1-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt0TrigSrc1-Sel.RVAL")
}

record(bo, "$(P)TrigEvt0TrigSrcMxc0-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S0 @$(EVG):Mxc0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcMxc1-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S0 @$(EVG):Mxc1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcMxc2-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S0 @$(EVG):Mxc2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcMxc3-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S0 @$(EVG):Mxc3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcMxc4-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S0 @$(EVG):Mxc4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcMxc5-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S0 @$(EVG):Mxc5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcMxc6-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S0 @$(EVG):Mxc6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcMxc7-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S0 @$(EVG):Mxc7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcAC-Sel") {
  field(DTYP, "EVG Trig Evt AC")
  field(OUT , "#C0 S0 @$(EVG):AcTrig")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcFrontInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcFrontInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp2-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp3-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp4-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp5-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp6-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp7-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp8-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp9-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp10-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp11-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp11")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp12-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp12")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp13-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp13")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp14-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp14")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt0TrigSrcUnivInp15-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S0 @$(EVG):UnivInp15")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt0TrigSrc1-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)TrigEvt0Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)TrigEvt0TrigSrcMxc0-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt0TrigSrcMxc1-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt0TrigSrcMxc2-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt0TrigSrcMxc3-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt0TrigSrcMxc4-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt0TrigSrcMxc5-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt0TrigSrcMxc6-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt0TrigSrcMxc7-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt0OmslCont-FOut_")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)TrigEvt0OmslCont-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0Omsl-FOut")
  field(OUTA, "$(P)TrigEvt0TrigSrcAC-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt0TrigSrcFrontInp0-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt0TrigSrcFrontInp1-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt0TrigSrcUnivInp0-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt0TrigSrcUnivInp1-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt0TrigSrcUnivInp2-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt0TrigSrcUnivInp3-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt0OmslCont1-FOut_")
}

record(dfanout, "$(P)TrigEvt0OmslCont1-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0Omsl-FOut")
  field(OUTA, "$(P)TrigEvt0TrigSrcUnivInp4-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt0TrigSrcUnivInp5-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt0TrigSrcUnivInp6-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt0TrigSrcUnivInp7-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt0TrigSrcUnivInp8-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt0TrigSrcUnivInp9-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt0TrigSrcUnivInp10-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt0TrigSrcUnivInp11-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt0OmslCont2-FOut_")
}

record(dfanout, "$(P)TrigEvt0OmslCont2-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt0Omsl-FOut")
  field(OUTA, "$(P)TrigEvt0TrigSrcUnivInp12-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt0TrigSrcUnivInp13-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt0TrigSrcUnivInp14-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt0TrigSrcUnivInp15-Sel.OMSL")
}

record(waveform, "$(P)TrigEvt0Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)TrigEvt1EvtCode-SP") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):TrigEvt1, PROP=EvtCode")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)TrigEvt1EvtCode-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)TrigEvt1EvtCode-RB") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG):TrigEvt1, PROP=EvtCode")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
}

record(mbbo, "$(P)TrigEvt1TrigSrc-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Front0")
  field(ELST, "Front1")
  field(TVST, "Univ0")
  field(TTST, "Univ1")
  field(FTST, "Univ2")
  field(FFST, "Univ3")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt1TrigSrc-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt1TrigSrc-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt1TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)TrigEvt1TrigSrc1-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt1TrigSrc1-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt1TrigSrc1-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt1TrigSrc1-Sel.RVAL")
}

record(bo, "$(P)TrigEvt1TrigSrcMxc0-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S1 @$(EVG):Mxc0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcMxc1-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S1 @$(EVG):Mxc1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcMxc2-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S1 @$(EVG):Mxc2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcMxc3-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S1 @$(EVG):Mxc3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcMxc4-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S1 @$(EVG):Mxc4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcMxc5-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S1 @$(EVG):Mxc5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcMxc6-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S1 @$(EVG):Mxc6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcMxc7-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S1 @$(EVG):Mxc7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcAC-Sel") {
  field(DTYP, "EVG Trig Evt AC")
  field(OUT , "#C0 S1 @$(EVG):AcTrig")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcFrontInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcFrontInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp2-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp3-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp4-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp5-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp6-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp7-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp8-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp9-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp10-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp11-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp11")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp12-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp12")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp13-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp13")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp14-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp14")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt1TrigSrcUnivInp15-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S1 @$(EVG):UnivInp15")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt1TrigSrc1-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)TrigEvt1Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)TrigEvt1TrigSrcMxc0-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt1TrigSrcMxc1-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt1TrigSrcMxc2-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt1TrigSrcMxc3-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt1TrigSrcMxc4-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt1TrigSrcMxc5-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt1TrigSrcMxc6-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt1TrigSrcMxc7-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt1OmslCont-FOut_")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)TrigEvt1OmslCont-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1Omsl-FOut")
  field(OUTA, "$(P)TrigEvt1TrigSrcAC-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt1TrigSrcFrontInp0-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt1TrigSrcFrontInp1-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt1TrigSrcUnivInp0-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt1TrigSrcUnivInp1-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt1TrigSrcUnivInp2-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt1TrigSrcUnivInp3-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt1OmslCont1-FOut_")
}

record(dfanout, "$(P)TrigEvt1OmslCont1-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1Omsl-FOut")
  field(OUTA, "$(P)TrigEvt1TrigSrcUnivInp4-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt1TrigSrcUnivInp5-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt1TrigSrcUnivInp6-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt1TrigSrcUnivInp7-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt1TrigSrcUnivInp8-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt1TrigSrcUnivInp9-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt1TrigSrcUnivInp10-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt1TrigSrcUnivInp11-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt1OmslCont2-FOut_")
}

record(dfanout, "$(P)TrigEvt1OmslCont2-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt1Omsl-FOut")
  field(OUTA, "$(P)TrigEvt1TrigSrcUnivInp12-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt1TrigSrcUnivInp13-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt1TrigSrcUnivInp14-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt1TrigSrcUnivInp15-Sel.OMSL")
}

record(waveform, "$(P)TrigEvt1Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)TrigEvt2EvtCode-SP") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):TrigEvt2, PROP=EvtCode")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)TrigEvt2EvtCode-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)TrigEvt2EvtCode-RB") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG):TrigEvt2, PROP=EvtCode")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
}

record(mbbo, "$(P)TrigEvt2TrigSrc-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Front0")
  field(ELST, "Front1")
  field(TVST, "Univ0")
  field(TTST, "Univ1")
  field(FTST, "Univ2")
  field(FFST, "Univ3")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt2TrigSrc-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt2TrigSrc-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt2TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)TrigEvt2TrigSrc1-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt2TrigSrc1-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt2TrigSrc1-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt2TrigSrc1-Sel.RVAL")
}

record(bo, "$(P)TrigEvt2TrigSrcMxc0-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S2 @$(EVG):Mxc0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcMxc1-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S2 @$(EVG):Mxc1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcMxc2-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S2 @$(EVG):Mxc2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcMxc3-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S2 @$(EVG):Mxc3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcMxc4-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S2 @$(EVG):Mxc4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcMxc5-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S2 @$(EVG):Mxc5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcMxc6-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S2 @$(EVG):Mxc6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcMxc7-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S2 @$(EVG):Mxc7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcAC-Sel") {
  field(DTYP, "EVG Trig Evt AC")
  field(OUT , "#C0 S2 @$(EVG):AcTrig")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcFrontInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcFrontInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp2-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp3-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp4-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp5-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp6-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp7-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp8-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp9-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp10-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp11-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp11")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp12-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp12")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp13-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp13")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp14-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp14")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt2TrigSrcUnivInp15-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S2 @$(EVG):UnivInp15")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt2TrigSrc1-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)TrigEvt2Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)TrigEvt2TrigSrcMxc0-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt2TrigSrcMxc1-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt2TrigSrcMxc2-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt2TrigSrcMxc3-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt2TrigSrcMxc4-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt2TrigSrcMxc5-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt2TrigSrcMxc6-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt2TrigSrcMxc7-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt2OmslCont-FOut_")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)TrigEvt2OmslCont-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2Omsl-FOut")
  field(OUTA, "$(P)TrigEvt2TrigSrcAC-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt2TrigSrcFrontInp0-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt2TrigSrcFrontInp1-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt2TrigSrcUnivInp0-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt2TrigSrcUnivInp1-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt2TrigSrcUnivInp2-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt2TrigSrcUnivInp3-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt2OmslCont1-FOut_")
}

record(dfanout, "$(P)TrigEvt2OmslCont1-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2Omsl-FOut")
  field(OUTA, "$(P)TrigEvt2TrigSrcUnivInp4-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt2TrigSrcUnivInp5-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt2TrigSrcUnivInp6-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt2TrigSrcUnivInp7-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt2TrigSrcUnivInp8-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt2TrigSrcUnivInp9-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt2TrigSrcUnivInp10-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt2TrigSrcUnivInp11-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt2OmslCont2-FOut_")
}

record(dfanout, "$(P)TrigEvt2OmslCont2-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt2Omsl-FOut")
  field(OUTA, "$(P)TrigEvt2TrigSrcUnivInp12-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt2TrigSrcUnivInp13-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt2TrigSrcUnivInp14-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt2TrigSrcUnivInp15-Sel.OMSL")
}

record(waveform, "$(P)TrigEvt2Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)TrigEvt3EvtCode-SP") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):TrigEvt3, PROP=EvtCode")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)TrigEvt3EvtCode-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)TrigEvt3EvtCode-RB") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG):TrigEvt3, PROP=EvtCode")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
}

record(mbbo, "$(P)TrigEvt3TrigSrc-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Front0")
  field(ELST, "Front1")
  field(TVST, "Univ0")
  field(TTST, "Univ1")
  field(FTST, "Univ2")
  field(FFST, "Univ3")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt3TrigSrc-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt3TrigSrc-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt3TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)TrigEvt3TrigSrc1-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt3TrigSrc1-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt3TrigSrc1-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt3TrigSrc1-Sel.RVAL")
}

record(bo, "$(P)TrigEvt3TrigSrcMxc0-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S3 @$(EVG):Mxc0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcMxc1-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S3 @$(EVG):Mxc1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcMxc2-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S3 @$(EVG):Mxc2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcMxc3-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S3 @$(EVG):Mxc3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcMxc4-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S3 @$(EVG):Mxc4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcMxc5-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S3 @$(EVG):Mxc5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcMxc6-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S3 @$(EVG):Mxc6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcMxc7-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S3 @$(EVG):Mxc7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcAC-Sel") {
  field(DTYP, "EVG Trig Evt AC")
  field(OUT , "#C0 S3 @$(EVG):AcTrig")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcFrontInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcFrontInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp2-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp3-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp4-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp5-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp6-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp7-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp8-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp9-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp10-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp11-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp11")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp12-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp12")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp13-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp13")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp14-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp14")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt3TrigSrcUnivInp15-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S3 @$(EVG):UnivInp15")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt3TrigSrc1-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)TrigEvt3Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)TrigEvt3TrigSrcMxc0-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt3TrigSrcMxc1-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt3TrigSrcMxc2-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt3TrigSrcMxc3-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt3TrigSrcMxc4-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt3TrigSrcMxc5-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt3TrigSrcMxc6-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt3TrigSrcMxc7-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt3OmslCont-FOut_")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)TrigEvt3OmslCont-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3Omsl-FOut")
  field(OUTA, "$(P)TrigEvt3TrigSrcAC-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt3TrigSrcFrontInp0-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt3TrigSrcFrontInp1-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt3TrigSrcUnivInp0-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt3TrigSrcUnivInp1-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt3TrigSrcUnivInp2-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt3TrigSrcUnivInp3-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt3OmslCont1-FOut_")
}

record(dfanout, "$(P)TrigEvt3OmslCont1-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3Omsl-FOut")
  field(OUTA, "$(P)TrigEvt3TrigSrcUnivInp4-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt3TrigSrcUnivInp5-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt3TrigSrcUnivInp6-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt3TrigSrcUnivInp7-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt3TrigSrcUnivInp8-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt3TrigSrcUnivInp9-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt3TrigSrcUnivInp10-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt3TrigSrcUnivInp11-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt3OmslCont2-FOut_")
}

record(dfanout, "$(P)TrigEvt3OmslCont2-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt3Omsl-FOut")
  field(OUTA, "$(P)TrigEvt3TrigSrcUnivInp12-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt3TrigSrcUnivInp13-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt3TrigSrcUnivInp14-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt3TrigSrcUnivInp15-Sel.OMSL")
}

record(waveform, "$(P)TrigEvt3Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)TrigEvt4EvtCode-SP") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):TrigEvt4, PROP=EvtCode")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)TrigEvt4EvtCode-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)TrigEvt4EvtCode-RB") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG):TrigEvt4, PROP=EvtCode")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
}

record(mbbo, "$(P)TrigEvt4TrigSrc-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Front0")
  field(ELST, "Front1")
  field(TVST, "Univ0")
  field(TTST, "Univ1")
  field(FTST, "Univ2")
  field(FFST, "Univ3")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt4TrigSrc-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt4TrigSrc-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt4TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)TrigEvt4TrigSrc1-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt4TrigSrc1-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt4TrigSrc1-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt4TrigSrc1-Sel.RVAL")
}

record(bo, "$(P)TrigEvt4TrigSrcMxc0-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S4 @$(EVG):Mxc0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcMxc1-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S4 @$(EVG):Mxc1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcMxc2-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S4 @$(EVG):Mxc2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcMxc3-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S4 @$(EVG):Mxc3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcMxc4-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S4 @$(EVG):Mxc4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcMxc5-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S4 @$(EVG):Mxc5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcMxc6-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S4 @$(EVG):Mxc6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcMxc7-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S4 @$(EVG):Mxc7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcAC-Sel") {
  field(DTYP, "EVG Trig Evt AC")
  field(OUT , "#C0 S4 @$(EVG):AcTrig")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcFrontInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcFrontInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp2-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp3-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp4-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp5-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp6-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp7-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp8-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp9-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp10-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp11-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp11")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp12-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp12")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp13-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp13")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp14-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp14")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt4TrigSrcUnivInp15-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S4 @$(EVG):UnivInp15")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt4TrigSrc1-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)TrigEvt4Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)TrigEvt4TrigSrcMxc0-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt4TrigSrcMxc1-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt4TrigSrcMxc2-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt4TrigSrcMxc3-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt4TrigSrcMxc4-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt4TrigSrcMxc5-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt4TrigSrcMxc6-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt4TrigSrcMxc7-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt4OmslCont-FOut_")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)TrigEvt4OmslCont-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4Omsl-FOut")
  field(OUTA, "$(P)TrigEvt4TrigSrcAC-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt4TrigSrcFrontInp0-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt4TrigSrcFrontInp1-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt4TrigSrcUnivInp0-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt4TrigSrcUnivInp1-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt4TrigSrcUnivInp2-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt4TrigSrcUnivInp3-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt4OmslCont1-FOut_")
}

record(dfanout, "$(P)TrigEvt4OmslCont1-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4Omsl-FOut")
  field(OUTA, "$(P)TrigEvt4TrigSrcUnivInp4-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt4TrigSrcUnivInp5-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt4TrigSrcUnivInp6-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt4TrigSrcUnivInp7-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt4TrigSrcUnivInp8-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt4TrigSrcUnivInp9-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt4TrigSrcUnivInp10-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt4TrigSrcUnivInp11-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt4OmslCont2-FOut_")
}

record(dfanout, "$(P)TrigEvt4OmslCont2-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt4Omsl-FOut")
  field(OUTA, "$(P)TrigEvt4TrigSrcUnivInp12-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt4TrigSrcUnivInp13-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt4TrigSrcUnivInp14-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt4TrigSrcUnivInp15-Sel.OMSL")
}

record(waveform, "$(P)TrigEvt4Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)TrigEvt5EvtCode-SP") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):TrigEvt5, PROP=EvtCode")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)TrigEvt5EvtCode-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)TrigEvt5EvtCode-RB") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG):TrigEvt5, PROP=EvtCode")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
}

record(mbbo, "$(P)TrigEvt5TrigSrc-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Front0")
  field(ELST, "Front1")
  field(TVST, "Univ0")
  field(TTST, "Univ1")
  field(FTST, "Univ2")
  field(FFST, "Univ3")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt5TrigSrc-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt5TrigSrc-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt5TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)TrigEvt5TrigSrc1-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt5TrigSrc1-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt5TrigSrc1-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt5TrigSrc1-Sel.RVAL")
}

record(bo, "$(P)TrigEvt5TrigSrcMxc0-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S5 @$(EVG):Mxc0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcMxc1-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S5 @$(EVG):Mxc1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcMxc2-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S5 @$(EVG):Mxc2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcMxc3-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S5 @$(EVG):Mxc3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcMxc4-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S5 @$(EVG):Mxc4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcMxc5-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S5 @$(EVG):Mxc5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcMxc6-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S5 @$(EVG):Mxc6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcMxc7-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S5 @$(EVG):Mxc7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcAC-Sel") {
  field(DTYP, "EVG Trig Evt AC")
  field(OUT , "#C0 S5 @$(EVG):AcTrig")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcFrontInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcFrontInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp2-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp3-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp4-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp5-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp6-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp7-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp8-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp9-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp10-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp11-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp11")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp12-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp12")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp13-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp13")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp14-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp14")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt5TrigSrcUnivInp15-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S5 @$(EVG):UnivInp15")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt5TrigSrc1-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)TrigEvt5Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)TrigEvt5TrigSrcMxc0-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt5TrigSrcMxc1-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt5TrigSrcMxc2-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt5TrigSrcMxc3-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt5TrigSrcMxc4-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt5TrigSrcMxc5-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt5TrigSrcMxc6-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt5TrigSrcMxc7-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt5OmslCont-FOut_")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)TrigEvt5OmslCont-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5Omsl-FOut")
  field(OUTA, "$(P)TrigEvt5TrigSrcAC-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt5TrigSrcFrontInp0-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt5TrigSrcFrontInp1-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt5TrigSrcUnivInp0-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt5TrigSrcUnivInp1-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt5TrigSrcUnivInp2-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt5TrigSrcUnivInp3-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt5OmslCont1-FOut_")
}

record(dfanout, "$(P)TrigEvt5OmslCont1-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5Omsl-FOut")
  field(OUTA, "$(P)TrigEvt5TrigSrcUnivInp4-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt5TrigSrcUnivInp5-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt5TrigSrcUnivInp6-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt5TrigSrcUnivInp7-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt5TrigSrcUnivInp8-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt5TrigSrcUnivInp9-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt5TrigSrcUnivInp10-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt5TrigSrcUnivInp11-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt5OmslCont2-FOut_")
}

record(dfanout, "$(P)TrigEvt5OmslCont2-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt5Omsl-FOut")
  field(OUTA, "$(P)TrigEvt5TrigSrcUnivInp12-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt5TrigSrcUnivInp13-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt5TrigSrcUnivInp14-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt5TrigSrcUnivInp15-Sel.OMSL")
}

record(waveform, "$(P)TrigEvt5Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)TrigEvt6EvtCode-SP") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):TrigEvt6, PROP=EvtCode")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)TrigEvt6EvtCode-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)TrigEvt6EvtCode-RB") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG):TrigEvt6, PROP=EvtCode")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
}

record(mbbo, "$(P)TrigEvt6TrigSrc-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Front0")
  field(ELST, "Front1")
  field(TVST, "Univ0")
  field(TTST, "Univ1")
  field(FTST, "Univ2")
  field(FFST, "Univ3")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt6TrigSrc-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt6TrigSrc-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt6TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)TrigEvt6TrigSrc1-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt6TrigSrc1-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt6TrigSrc1-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt6TrigSrc1-Sel.RVAL")
}

record(bo, "$(P)TrigEvt6TrigSrcMxc0-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S6 @$(EVG):Mxc0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcMxc1-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S6 @$(EVG):Mxc1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcMxc2-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S6 @$(EVG):Mxc2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcMxc3-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S6 @$(EVG):Mxc3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcMxc4-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S6 @$(EVG):Mxc4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcMxc5-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S6 @$(EVG):Mxc5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcMxc6-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S6 @$(EVG):Mxc6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcMxc7-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S6 @$(EVG):Mxc7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcAC-Sel") {
  field(DTYP, "EVG Trig Evt AC")
  field(OUT , "#C0 S6 @$(EVG):AcTrig")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcFrontInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcFrontInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp2-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp3-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp4-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp5-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp6-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp7-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp8-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp9-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp10-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp11-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp11")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp12-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp12")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp13-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp13")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp14-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp14")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt6TrigSrcUnivInp15-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S6 @$(EVG):UnivInp15")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt6TrigSrc1-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)TrigEvt6Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)TrigEvt6TrigSrcMxc0-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt6TrigSrcMxc1-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt6TrigSrcMxc2-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt6TrigSrcMxc3-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt6TrigSrcMxc4-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt6TrigSrcMxc5-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt6TrigSrcMxc6-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt6TrigSrcMxc7-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt6OmslCont-FOut_")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)TrigEvt6OmslCont-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6Omsl-FOut")
  field(OUTA, "$(P)TrigEvt6TrigSrcAC-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt6TrigSrcFrontInp0-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt6TrigSrcFrontInp1-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt6TrigSrcUnivInp0-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt6TrigSrcUnivInp1-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt6TrigSrcUnivInp2-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt6TrigSrcUnivInp3-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt6OmslCont1-FOut_")
}

record(dfanout, "$(P)TrigEvt6OmslCont1-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6Omsl-FOut")
  field(OUTA, "$(P)TrigEvt6TrigSrcUnivInp4-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt6TrigSrcUnivInp5-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt6TrigSrcUnivInp6-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt6TrigSrcUnivInp7-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt6TrigSrcUnivInp8-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt6TrigSrcUnivInp9-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt6TrigSrcUnivInp10-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt6TrigSrcUnivInp11-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt6OmslCont2-FOut_")
}

record(dfanout, "$(P)TrigEvt6OmslCont2-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt6Omsl-FOut")
  field(OUTA, "$(P)TrigEvt6TrigSrcUnivInp12-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt6TrigSrcUnivInp13-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt6TrigSrcUnivInp14-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt6TrigSrcUnivInp15-Sel.OMSL")
}

record(waveform, "$(P)TrigEvt6Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(longout, "$(P)TrigEvt7EvtCode-SP") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(OUT,  "@OBJ=$(EVG):TrigEvt7, PROP=EvtCode")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(FLNK, "$(P)TrigEvt7EvtCode-RB")
  info(autosaveFields_pass0, "VAL")
}

record(longin, "$(P)TrigEvt7EvtCode-RB") {
  field(DESC, "EVG Trigger Event Code")
  field(DTYP, "Obj Prop uint32")
  field(INP,  "@OBJ=$(EVG):TrigEvt7, PROP=EvtCode")
  field(HIHI, "256")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
}

record(mbbo, "$(P)TrigEvt7TrigSrc-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Mxc0")
  field(TWST, "Mxc1")
  field(THST, "Mxc2")
  field(FRST, "Mxc3")
  field(FVST, "Mxc4")
  field(SXST, "Mxc5")
  field(SVST, "Mxc6")
  field(EIST, "Mxc7")
  field(NIST, "AC")
  field(TEST, "Front0")
  field(ELST, "Front1")
  field(TVST, "Univ0")
  field(TTST, "Univ1")
  field(FTST, "Univ2")
  field(FFST, "Univ3")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTVL, "4096")
  field(FTVL, "8192")
  field(FFVL, "16384")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt7TrigSrc-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt7TrigSrc-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt7TrigSrc-Sel.RVAL")
}

record(mbbo, "$(P)TrigEvt7TrigSrc1-Sel") {
  field(DESC, "EVG Trig Evt Trig")
  field(PINI, "YES")
  field(VAL,  "0")
  field(UDF,  "0")
  field(ZRST, "Off")
  field(ONST, "Univ4")
  field(TWST, "Univ5")
  field(THST, "Univ6")
  field(FRST, "Univ7")
  field(FVST, "Univ8")
  field(SXST, "Univ9")
  field(SVST, "Univ10")
  field(EIST, "Univ11")
  field(NIST, "Univ12")
  field(TEST, "Univ13")
  field(ELST, "Univ14")
  field(TVST, "Univ15")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "4")
  field(FRVL, "8")
  field(FVVL, "16")
  field(SXVL, "32")
  field(SVVL, "64")
  field(EIVL, "128")
  field(NIVL, "256")
  field(TEVL, "512")
  field(ELVL, "1024")
  field(TVVL, "2048")
  field(TTSV, "INVALID")
  field(FTSV, "INVALID")
  field(FFSV, "INVALID")
  field(UNSV, "INVALID")
  field(IVOA, "Don't drive outputs")
  field(FLNK, "$(P)TrigEvt7TrigSrc1-MbbiDir_")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)TrigEvt7TrigSrc1-MbbiDir_") {
  field(ASG, "private")
  field(DESC, "EVG Trig Evt Trig")
  field(INP,  "$(P)TrigEvt7TrigSrc1-Sel.RVAL")
}

record(bo, "$(P)TrigEvt7TrigSrcMxc0-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S7 @$(EVG):Mxc0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcMxc1-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S7 @$(EVG):Mxc1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcMxc2-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S7 @$(EVG):Mxc2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcMxc3-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S7 @$(EVG):Mxc3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcMxc4-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S7 @$(EVG):Mxc4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcMxc5-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S7 @$(EVG):Mxc5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcMxc6-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S7 @$(EVG):Mxc6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcMxc7-Sel") {
  field(DTYP, "EVG Trig Evt Mxc")
  field(OUT , "#C0 S7 @$(EVG):Mxc7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcAC-Sel") {
  field(DTYP, "EVG Trig Evt AC")
  field(OUT , "#C0 S7 @$(EVG):AcTrig")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcFrontInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):FrontInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcFrontInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):FrontInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp0-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp0")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.BB CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp1-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp1")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.BC CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp2-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp2")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.BD CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp3-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp3")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc-MbbiDir_.BE CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp4-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp4")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B0 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp5-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp5")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B1 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp6-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp6")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B2 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp7-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp7")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B3 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp8-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp8")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B4 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp9-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp9")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B5 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp10-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp10")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B6 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp11-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp11")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B7 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp12-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp12")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B8 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp13-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp13")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.B9 CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp14-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp14")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.BA CP")
}

record(bo, "$(P)TrigEvt7TrigSrcUnivInp15-Sel") {
  field(DTYP, "EVG TrigEvt")
  field(OUT , "#C0 S7 @$(EVG):UnivInp15")
  field(ZNAM, "Clear")
  field(ONAM, "Set")
  field(DOL,  "$(P)TrigEvt7TrigSrc1-MbbiDir_.BB CP")
}

#
# By default OMSL field for the *TrigSrc* records is "closed_loop" hence
# only one Source can be selected due of MBBO record. If you want to select
# multiple sources then the OMSL field for the *TrigSrc* records should be
# "supervisory" mode. In order to select multiple sources use directly *TrigSrc*
# records bypassing the TrigSrc-Sel record.
#
record(dfanout, "$(P)TrigEvt7Omsl-FOut") {
  field(PINI, "YES")
  field(VAL,  "1")
  field(UDF,  "0")
  field(OMSL, "supervisory")
  field(OUTA, "$(P)TrigEvt7TrigSrcMxc0-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt7TrigSrcMxc1-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt7TrigSrcMxc2-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt7TrigSrcMxc3-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt7TrigSrcMxc4-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt7TrigSrcMxc5-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt7TrigSrcMxc6-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt7TrigSrcMxc7-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt7OmslCont-FOut_")
  info(autosaveFields_pass0, "VAL")
}

record(dfanout, "$(P)TrigEvt7OmslCont-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7Omsl-FOut")
  field(OUTA, "$(P)TrigEvt7TrigSrcAC-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt7TrigSrcFrontInp0-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt7TrigSrcFrontInp1-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt7TrigSrcUnivInp0-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt7TrigSrcUnivInp1-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt7TrigSrcUnivInp2-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt7TrigSrcUnivInp3-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt7OmslCont1-FOut_")
}

record(dfanout, "$(P)TrigEvt7OmslCont1-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7Omsl-FOut")
  field(OUTA, "$(P)TrigEvt7TrigSrcUnivInp4-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt7TrigSrcUnivInp5-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt7TrigSrcUnivInp6-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt7TrigSrcUnivInp7-Sel.OMSL")
  field(OUTE, "$(P)TrigEvt7TrigSrcUnivInp8-Sel.OMSL")
  field(OUTF, "$(P)TrigEvt7TrigSrcUnivInp9-Sel.OMSL")
  field(OUTG, "$(P)TrigEvt7TrigSrcUnivInp10-Sel.OMSL")
  field(OUTH, "$(P)TrigEvt7TrigSrcUnivInp11-Sel.OMSL")
  field(FLNK, "$(P)TrigEvt7OmslCont2-FOut_")
}

record(dfanout, "$(P)TrigEvt7OmslCont2-FOut_") {
  field(ASG, "private")
  field(OMSL, "closed_loop")
  field(DOL,  "$(P)TrigEvt7Omsl-FOut")
  field(OUTA, "$(P)TrigEvt7TrigSrcUnivInp12-Sel.OMSL")
  field(OUTB, "$(P)TrigEvt7TrigSrcUnivInp13-Sel.OMSL")
  field(OUTC, "$(P)TrigEvt7TrigSrcUnivInp14-Sel.OMSL")
  field(OUTD, "$(P)TrigEvt7TrigSrcUnivInp15-Sel.OMSL")
}

record(waveform, "$(P)TrigEvt7Label-I") {
  field(DESC, "Label")
  field(FTVL, "CHAR")
  field(NELM, "128")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)dbus-send-s8") {
  field(DESC, "Send Buffer")
  field(DTYP, "MRF Data Buf Tx")
  field(INP , "@OBJ=$(EVG):BUFTX, Proto=1, P=Data Tx")
  field(FTVL, "CHAR")
  field(NELM, "2046")
  info(autosaveFields_pass0, "INP")
  info(autosaveFields_pass1, "VAL")
}

record(waveform, "$(P)dbus-send-u32") {
  field(DESC, "Send Buffer")
  field(DTYP, "MRF Data Buf Tx")
  field(INP , "@OBJ=$(EVG):BUFTX, Proto=1, P=Data Tx")
  field(FTVL, "ULONG")
  field(NELM, "2046")
  info(autosaveFields_pass0, "INP")
  info(autosaveFields_pass1, "VAL")
}
# Selects Event link data mode.
#
# This chooses between DBus only, and DBus+Buffer (default) modes.
# In DBus only mode Data Buffer reception is not possible.
#
# Must match EVR setting
#
record(bo, "$(P)LinkTxMode-Sel") {
  field(DESC, "Data mode")
  field(DTYP, "Obj Prop bool")
  field(OUT , "@OBJ=$(EVG):BUFTX, PROP=Enable")
  field(PINI, "YES")
  field(VAL , "1")
  field(ZNAM, "DBus only")
  field(ONAM, "DBus+Buffer")
  info(autosaveFields_pass0, "VAL")
}

record(mbbiDirect, "$(P)FCTLink-Sts_") {
  field(ASG, "private")
  field(DTYP, "Obj Prop uint16")
  field(INP, "@OBJ=$(EVG):FCT, PROP=Status")
  field(SCAN, "1 second")
}

record(bi, "$(P)FCTLink1-Sts") {
  field(INP, "$(P)FCTLink-Sts_.B0 CP MSI")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(bi, "$(P)FCTLink2-Sts") {
  field(INP, "$(P)FCTLink-Sts_.B1 CP MSI")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(bi, "$(P)FCTLink3-Sts") {
  field(INP, "$(P)FCTLink-Sts_.B2 CP MSI")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(bi, "$(P)FCTLink4-Sts") {
  field(INP, "$(P)FCTLink-Sts_.B3 CP MSI")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(bi, "$(P)FCTLink5-Sts") {
  field(INP, "$(P)FCTLink-Sts_.B4 CP MSI")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(bi, "$(P)FCTLink6-Sts") {
  field(INP, "$(P)FCTLink-Sts_.B5 CP MSI")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(bi, "$(P)FCTLink7-Sts") {
  field(INP, "$(P)FCTLink-Sts_.B6 CP MSI")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(bi, "$(P)FCTLink8-Sts") {
  field(INP, "$(P)FCTLink-Sts_.B7 CP MSI")
  field(ZNAM, "Fail")
  field(ONAM, "OK")
  field(ZSV , "MAJOR")
}

record(ai, "$(P)FCTMsrdUp-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCUpstream")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrdFIFO-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCFIFO")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrdInt-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCInternal")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrd1-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCPort1")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrd2-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCPort2")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrd3-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCPort3")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrd4-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCPort4")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrd5-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCPort5")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrd6-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCPort6")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrd7-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCPort7")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(ai, "$(P)FCTMsrd8-I") {
  field(DTYP, "Obj Prop double")
  field(INP, "@OBJ=$(EVG):FCT, PROP=DCPort8")
  field(SCAN, "1 second")
  field(EGU, "ns")
  field(PREC, "3")
}

record(longin, "$(P)FCTID-I") {
  field(DTYP, "Obj Prop uint32")
  field(INP, "@OBJ=$(EVG):FCT, PROP=TopoID")
  field(SCAN, "1 second")
}

record(bo, "$(P)SFP1Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP1, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(P)SFP1T-I")
}

record(ai, "$(P)SFP1T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(P)SFP1PwrTX-I")
}

record(ai, "$(P)SFP1PwrTX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP1PwrRX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP1PwrRX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP1SpeedLink-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP1SpeedLink-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "10500")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(P)SFP1Vendor-I")
}

record(stringin, "$(P)SFP1Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Vendor")
  field(FLNK, "$(P)SFP1Part-I")
}

record(stringin, "$(P)SFP1Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Part")
  field(FLNK, "$(P)SFP1Rev-I")
}

record(stringin, "$(P)SFP1Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Rev")
  field(FLNK, "$(P)SFP1Serial-I")
}

record(stringin, "$(P)SFP1Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Serial")
  field(FLNK, "$(P)SFP1DateManu-I")
}

record(stringin, "$(P)SFP1DateManu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP1, PROP=Date")
}

record(bo, "$(P)SFP2Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP2, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(P)SFP2T-I")
}

record(ai, "$(P)SFP2T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(P)SFP2PwrTX-I")
}

record(ai, "$(P)SFP2PwrTX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP2PwrRX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP2PwrRX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP2SpeedLink-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP2SpeedLink-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "10500")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(P)SFP2Vendor-I")
}

record(stringin, "$(P)SFP2Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Vendor")
  field(FLNK, "$(P)SFP2Part-I")
}

record(stringin, "$(P)SFP2Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Part")
  field(FLNK, "$(P)SFP2Rev-I")
}

record(stringin, "$(P)SFP2Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Rev")
  field(FLNK, "$(P)SFP2Serial-I")
}

record(stringin, "$(P)SFP2Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Serial")
  field(FLNK, "$(P)SFP2DateManu-I")
}

record(stringin, "$(P)SFP2DateManu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP2, PROP=Date")
}

record(bo, "$(P)SFP3Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP3, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(P)SFP3T-I")
}

record(ai, "$(P)SFP3T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(P)SFP3PwrTX-I")
}

record(ai, "$(P)SFP3PwrTX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP3PwrRX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP3PwrRX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP3SpeedLink-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP3SpeedLink-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "10500")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(P)SFP3Vendor-I")
}

record(stringin, "$(P)SFP3Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Vendor")
  field(FLNK, "$(P)SFP3Part-I")
}

record(stringin, "$(P)SFP3Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Part")
  field(FLNK, "$(P)SFP3Rev-I")
}

record(stringin, "$(P)SFP3Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Rev")
  field(FLNK, "$(P)SFP3Serial-I")
}

record(stringin, "$(P)SFP3Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Serial")
  field(FLNK, "$(P)SFP3DateManu-I")
}

record(stringin, "$(P)SFP3DateManu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP3, PROP=Date")
}

record(bo, "$(P)SFP4Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP4, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(P)SFP4T-I")
}

record(ai, "$(P)SFP4T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(P)SFP4PwrTX-I")
}

record(ai, "$(P)SFP4PwrTX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP4PwrRX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP4PwrRX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP4SpeedLink-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP4SpeedLink-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "10500")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(P)SFP4Vendor-I")
}

record(stringin, "$(P)SFP4Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Vendor")
  field(FLNK, "$(P)SFP4Part-I")
}

record(stringin, "$(P)SFP4Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Part")
  field(FLNK, "$(P)SFP4Rev-I")
}

record(stringin, "$(P)SFP4Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Rev")
  field(FLNK, "$(P)SFP4Serial-I")
}

record(stringin, "$(P)SFP4Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Serial")
  field(FLNK, "$(P)SFP4DateManu-I")
}

record(stringin, "$(P)SFP4DateManu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP4, PROP=Date")
}

record(bo, "$(P)SFP5Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP5, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(P)SFP5T-I")
}

record(ai, "$(P)SFP5T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(P)SFP5PwrTX-I")
}

record(ai, "$(P)SFP5PwrTX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP5PwrRX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP5PwrRX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP5SpeedLink-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP5SpeedLink-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "10500")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(P)SFP5Vendor-I")
}

record(stringin, "$(P)SFP5Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Vendor")
  field(FLNK, "$(P)SFP5Part-I")
}

record(stringin, "$(P)SFP5Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Part")
  field(FLNK, "$(P)SFP5Rev-I")
}

record(stringin, "$(P)SFP5Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Rev")
  field(FLNK, "$(P)SFP5Serial-I")
}

record(stringin, "$(P)SFP5Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Serial")
  field(FLNK, "$(P)SFP5DateManu-I")
}

record(stringin, "$(P)SFP5DateManu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP5, PROP=Date")
}

record(bo, "$(P)SFP6Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP6, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(P)SFP6T-I")
}

record(ai, "$(P)SFP6T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(P)SFP6PwrTX-I")
}

record(ai, "$(P)SFP6PwrTX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP6PwrRX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP6PwrRX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP6SpeedLink-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP6SpeedLink-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "10500")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(P)SFP6Vendor-I")
}

record(stringin, "$(P)SFP6Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Vendor")
  field(FLNK, "$(P)SFP6Part-I")
}

record(stringin, "$(P)SFP6Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Part")
  field(FLNK, "$(P)SFP6Rev-I")
}

record(stringin, "$(P)SFP6Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Rev")
  field(FLNK, "$(P)SFP6Serial-I")
}

record(stringin, "$(P)SFP6Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Serial")
  field(FLNK, "$(P)SFP6DateManu-I")
}

record(stringin, "$(P)SFP6DateManu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP6, PROP=Date")
}

record(bo, "$(P)SFP7Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP7, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(P)SFP7T-I")
}

record(ai, "$(P)SFP7T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(P)SFP7PwrTX-I")
}

record(ai, "$(P)SFP7PwrTX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP7PwrRX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP7PwrRX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP7SpeedLink-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP7SpeedLink-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "10500")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(P)SFP7Vendor-I")
}

record(stringin, "$(P)SFP7Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Vendor")
  field(FLNK, "$(P)SFP7Part-I")
}

record(stringin, "$(P)SFP7Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Part")
  field(FLNK, "$(P)SFP7Rev-I")
}

record(stringin, "$(P)SFP7Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Rev")
  field(FLNK, "$(P)SFP7Serial-I")
}

record(stringin, "$(P)SFP7Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Serial")
  field(FLNK, "$(P)SFP7DateManu-I")
}

record(stringin, "$(P)SFP7DateManu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP7, PROP=Date")
}

record(bo, "$(P)SFP8Update-Cmd") {
  field(DTYP, "Obj Prop bool")
  field(SCAN, "10 second")
  field(OUT , "@OBJ=$(EVG):FCT:SFP8, PROP=Update")
  field(ZNAM, "Update")
  field(ONAM, "Update")
  field(FLNK, "$(P)SFP8T-I")
}

record(ai, "$(P)SFP8T-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Temperature")
  field(DESC, "Tranceiver Temperature")
  field(ADEL, "0.5")
  field(HIGH, "50")
  field(HSV , "MINOR")
  field(HIHI, "60")
  field(HHSV, "MAJOR")
  field(LOW , "0")
  field(LSV , "INVALID")
  field(EGU , "C")
  field(PREC, "1")
  field(FLNK, "$(P)SFP8PwrTX-I")
}

record(ai, "$(P)SFP8PwrTX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Power TX")
  field(DESC, "Tranceiver Output Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "200")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP8PwrRX-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP8PwrRX-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Power RX")
  field(DESC, "Tranceiver Input Power")
  field(ADEL, "5")
  field(HIGH, "800")
  field(HSV , "MINOR")
  field(LOW , "100")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1") # SFP module removed
  field(LLSV, "INVALID")
  field(EGU , "uW")
  field(LINR, "LINEAR")
  field(ESLO, "1e6")
  field(PREC, "1")
  field(FLNK, "$(P)SFP8SpeedLink-I")
  info(autosaveFields_pass0, "LOW")
}

record(ai, "$(P)SFP8SpeedLink-I") {
  field(DTYP, "Obj Prop double")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Link Speed")
  field(DESC, "Tranceiver Line Rate")
  field(HIGH, "10500")
  field(HSV , "MAJOR")
  field(LOW , "3000")
  field(LSV , "MAJOR")
  field(LOLO, "-0.1")
  field(LLSV, "INVALID")
  field(EGU , "Mb/s")
  field(PREC, "0")
  field(FLNK, "$(P)SFP8Vendor-I")
}

record(stringin, "$(P)SFP8Vendor-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor name")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Vendor")
  field(FLNK, "$(P)SFP8Part-I")
}

record(stringin, "$(P)SFP8Part-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part number")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Part")
  field(FLNK, "$(P)SFP8Rev-I")
}

record(stringin, "$(P)SFP8Rev-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Vendor part revision")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Rev")
  field(FLNK, "$(P)SFP8Serial-I")
}

record(stringin, "$(P)SFP8Serial-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "SFP serial number")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Serial")
  field(FLNK, "$(P)SFP8DateManu-I")
}

record(stringin, "$(P)SFP8DateManu-I") {
  field(DTYP, "Obj Prop string")
  field(DESC, "Manufactored date")
  field(INP , "@OBJ=$(EVG):FCT:SFP8, PROP=Date")
}
