
record(mbbi, "$(PREFIX,undefined):AI$(IDX):STAT") {
	field(DESC, "The state of the IDXnel.")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(ASYN_PORT,undefined).ai, 0) State")
	field(ZRVL, "0")
	field(ZRST, "UNKNOWN")
	field(ONVL, "1")
	field(ONST, "IOCINIT")
	field(TWVL, "2")
	field(TWST, "DISABLED")
	field(THVL, "3")
	field(THST, "ENABLED [DEPRECATED]")
	field(FRVL, "4")
	field(FRST, "PROCESSING")
	field(FVVL, "5")
	field(FVST, "DEGRADED [DEPRECATED]")
	field(SXVL, "6")
	field(SXST, "ERROR")
	field(SVVL, "7")
	field(SVST, "RESET")
	field(EIVL, "8")
	field(EIST, "FAULT")
	field(EIVL, "9")
	field(EIST, "READY [DEPRECATED]")
	field(SCAN, "I/O Intr")
}

record(bo, "$(PREFIX,undefined):AI$(IDX):ENBL_SP"){
	field(DESC, "Specifies if the IDXnel eanbled.")
	field(DTYP, "asynInt32")
    field(OUT,  "@asyn( $(ASYN_PORT,undefined).ai, 0)Enabled")
	field(ZNAM, "DISABLED")
	field(ONAM, "ENABLED")
    field(PINI, "YES")
    field(VAL, "1")
}

record(ao, "$(PREFIX,undefined):AI$(IDX):RNG_SP") {
	field(DESC, "Range of the analog input.")
	field(DTYP, "asynFloat64")
	field(OUT, "@asyn($(ASYN_PORT,undefined).ai, 0)RangeDouble")
	field(EGU, "Vpp")
	field(VAL, "5")
	field(PINI, "YES")
	field(HOPR, "50")
	field(LOPR, "0")
	field(PREC, "2")	
}

record(bi, "$(PREFIX,undefined):AI$(IDX):ENBL_RB"){
	field(DESC, "Current state of the analog input")
	field(DTYP, "asynInt32")
	field(SCAN, "I/O Intr")
    field(INP, "@asyn( $(ASYN_PORT,undefined).ai, 0)Enabled")
	field(ZNAM, "DISABLED")
	field(ONAM, "ENABLED")    
}

record(ai, "$(PREFIX,undefined):AI$(IDX):RNG_RB") {
	field(DESC, "Applied range of the analog input")
	field(DTYP, "asynFloat64")
	field(SCAN, "I/O Intr")
	field(INP, "@asyn($(ASYN_PORT,undefined).ai, 0)RangeDouble")
	field(SCAN, "I/O Intr")	
	field(EGU,  "Vpp")
	field(PREC, "2")
}


record(ao,"$(PREFIX,undefined):AI$(IDX):ATT_SP") {
	field(DESC, "Attenuation of the analog input")
	field(DTYP, "asynInt32")
	field(OUT,	"@asyn($(ASYN_PORT,undefined).ai, 0)Attenuation")
	field(VAL,  "1")
	field(PINI, "YES")
	field(HOPR, "10")
	field(LOPR, "1")
}

record(ao,"$(PREFIX,undefined):AI$(IDX):OFS_SP") {
	field(DESC, "Offset of analog IDXnel")
	field(DTYP, "asynFloat64")
	field(OUT, "@asyn($(ASYN_PORT,undefined).ai, 0)Offset")
	field(EGU, "Vdc")
	field(VAL, "0.0")
	field(PINI, "YES")
	field(HOPR, "20.0")
	field(LOPR, "-20.0")
	field(PREC, "2")
}


record(mbbo, "$(PREFIX,undefined):AI$(IDX):IMPD_SP") {
	field(DESC, "Impedance of the analog input")
	field(DTYP, "asynInt32")
	field(OUT,	"@asyn($(ASYN_PORT,undefined).ai, 0)Impedance32")
    field(ZRVL, 50)
	field(ONVL, 1000000)
	field(ZRST, "50 Ohm")
	field(ONST, "1 MOhm")
	field(VAL,  "0")
	field(PINI, "YES")
}

record(mbbo,"$(PREFIX,undefined):AI$(IDX):ACDC_SP") {
	field(DESC, "Coupling of the analog input")
	field(DTYP, "asynInt32")
	field(OUT,	"@asyn($(ASYN_PORT,undefined).ai, 0)Coupling")
	field(ZRVL, 0)
	field(ONVL, 1)
	field(TWVL, 2)
	field(ZRST, "AC")
	field(ONST, "DC")
    field(TWST, "GND")
    field(VAL,  0)
    field(PINI, "YES")
}

record(ai,"$(PREFIX,undefined):AI$(IDX):OFS_RB") {
	field(DESC, "Applied offsef of the analog input")
	field(DTYP, "asynFloat64")
	field(SCAN, "I/O Intr")
	field(INP,	"@asyn($(ASYN_PORT,undefined).ai, 0)Offset")
	field(EGU,  "Vdc")
	field(PREC, "2")
}

record(mbbi,"$(PREFIX,undefined):AI$(IDX):ACDC_RB") {
	field(DESC, "Applied coupling of the analog input")
	field(DTYP, "asynInt32")
	field(SCAN, "I/O Intr")
	field(INP,	"@asyn($(ASYN_PORT,undefined).ai, 0)Coupling")
	field(ZRVL, 0)
	field(ONVL, 1)
	field(TWVL, 2)
	field(ZRST, "AC")
	field(ONST, "DC")
	field(TWST, "GND")
}

record(mbbi, "$(PREFIX,undefined):AI$(IDX):IMPD_RB") {
	field(DESC, "Applied impedance of the analog input")
	field(DTYP, "asynInt32")
	field(INP,	"@asyn($(ASYN_PORT,undefined).ai, 0)Impedance32")
    field(ZRVL, 50)
	field(ONVL, 1000000)
	field(ZRST, "50 Ohm")
	field(ONST, "1 MOhm")
	field(SCAN, "I/O Intr")	
}

record(ai,"$(PREFIX,undefined):AI$(IDX):ATT_RB") {
	field(DESC, "Applied attenuation of the analog input")
	field(DTYP, "asynInt32")
	field(INP,	"@asyn($(ASYN_PORT,undefined).ai, 0)Attenuation")
	field(SCAN, "I/O Intr")
}

#
# Following types and NDS functions could be used for the buffer output
#
# - asynInt8ArrayIn    : BufferInt8
# - asynInt16ArrayIn   : BufferInt16
# - asynInt32ArrayIn   : BufferInt32
# - asynFloat32ArrayIn : BufferFloat32
# - asynFloat64ArrayIn : BufferFloat64
#
record(waveform, "$(PREFIX,undefined):AI0") {
	field(DESC, "Read data acquisition buffer.")
	field(DTYP, "asynFloat64ArrayIn")
	field(INP,  "@asyn($(ASYN_PORT,undefined).ai, 0) BufferFloat64")
	field(FTVL, "DOUBLE")
	field(NELM, "$(BUFSIZE,undefined)")
	field(PINI, "NO")
	field(SCAN, "I/O Intr")
#	field(TSE,   "-2")
	field(FLNK,  "$(PREFIX,undefined):AI$(IDX):ROI")
}

record(subArray, "$(PREFIX,undefined):AI$(IDX):ROI") {
	field(DESC, "Sub array of raw data.")
	field(INP,  "$(PREFIX,undefined):AI0")
	field(FTVL, "DOUBLE")
	field(MALM, "$(BUFSIZE,undefined)")
	field(NELM, "$(BUFSIZE,undefined)")
	field(INDX, "0")
	field(FLNK,  "$(PREFIX,undefined):AI$(IDX):FANOUT")
}

record(fanout, "$(PREFIX,undefined):AI$(IDX):FANOUT") {
	field(DESC, "Fanout")
	field(SCAN, "Passive")
	field(SELM, "All")	
	field(LNK1, "$(PREFIX,undefined):AI$(IDX):CNT")
	field(LNK2, "$(PV_STATS,undefined)")
	field(LNK3, "$(PREFIX,undefined):AI$(IDX):AVG")
}

record(calc, "$(PREFIX,undefined):AI$(IDX):CNT"){
	field(INPA, "$(PREFIX,undefined):AI$(IDX):CNT")
	field(CALC, "A+1")
	field(VAL, "0")
}

record(calc, "$(PREFIX,undefined):AI$(IDX):TCNT"){
    field(DESC, "Time counter")
	field(INPA, "$(PREFIX,undefined):AI$(IDX):TCNT")
	field(CALC, "A+1")
	field(VAL, "0")
	field(SCAN, "1 second")
}

record(longin,  "$(PREFIX,undefined):AI$(IDX):CNTLCK"){
	field(INP,  "$(PREFIX,undefined):AI$(IDX):CNT NPP")
	field(SCAN, "Passive")
	field(VAL,  "0")
}

record(longin,  "$(PREFIX,undefined):AI$(IDX):CNTLCK2"){
	field(INP,  "$(PREFIX,undefined):AI$(IDX):CNT NPP")
	field(SCAN, "Passive")
	field(VAL,  "0")
}

record(longin,  "$(PREFIX,undefined):AI$(IDX):TCNTLCK"){
	field(DESC, "Time counter lock.")
	field(INP,  "$(PREFIX,undefined):AI$(IDX):TCNT NPP")
	field(SCAN, "Passive")
	field(VAL,  "0")
}

record(longin,  "$(PREFIX,undefined):AI$(IDX):TRGCNTLCK"){
    field(DESC, "Trigger counter lock.")
	field(INP,  "$(PV_EVENT_CNT,undefined) NPP")
	field(SCAN, "Passive")
	field(VAL,  "0")
}

record(compress, "$(PREFIX,undefined):AI$(IDX):AVG"){
	field(INP,   "$(PREFIX,undefined):AI0")
	field(ALG,   "Average")
	field(NSAM,  "$(BUFSIZE,undefined)")
	field(N,     "100")
}

record(calcout, "$(PREFIX,undefined):AI$(IDX):MISS"){
    field(DESC, "Missed triggers")
	field(INPA, "$(PREFIX,undefined):AI$(IDX):CNTLCK NPP")
	field(INPB, "$(PREFIX,undefined):AI$(IDX):CNTLCK PP")
	field(INPC, "$(PREFIX,undefined):AI$(IDX):TRGCNTLCK NPP")
	field(INPD, "$(PREFIX,undefined):AI$(IDX):TRGCNTLCK PP")
	field(INPE, "$(PREFIX,undefined):AI$(IDX):MISS NPP")
	field(CALC, "E+(D-C)-(B-A)")
	field(VAL,   "0")	
	field(SCAN, "10 second")			
}

record(calc, "$(PREFIX,undefined):AI$(IDX):CTR"){
    field(DESC, "Calculated trigger rate.")
	field(INPA, "$(PREFIX,undefined):AI$(IDX):CNTLCK2 NPP")
	field(INPB, "$(PREFIX,undefined):AI$(IDX):CNTLCK2 PP")
	field(INPE, "$(PREFIX,undefined):AI$(IDX):MISS NPP")
	field(CALC, "(B-A)/10")
	field(VAL,   "0")
	field(SCAN, "10 second")
	field(FLNK, "$(PREFIX,undefined):AI$(IDX):CTRA")
	field(EGU,  "Hz")
}

record(compress, "$(PREFIX,undefined):AI$(IDX):CTRA"){
    field(DESC,  "Calculated trigger rate average.")
	field(INP,   "$(PREFIX,undefined):AI$(IDX):CTR")
	field(ALG,   "N to 1 Average")
	field(NSAM,  "1")
	field(N,     "30")
	field(EGU,   "Hz")
}



# Following types and NDS functions could be used for the single value output
#
# -  asynInt32   : ValueInt32 
# -  asynFloat32 : ValueFloat32 
# -  asynFloat64 : ValueFloat64 
#
record(ai, "$(PREFIX,undefined):AI$(IDX):IN") {
	field(DESC, "Current value.")
	field(DTYP, "asynFloat64")
	field(INP,  "@asyn($(ASYN_PORT,undefined).ai, 0) ValueFloat64")
	field(SCAN, "I/O Intr")
}
